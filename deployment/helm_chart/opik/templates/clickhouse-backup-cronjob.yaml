{{ if and .Values.clickhouse.enabled .Values.clickhouse.backup.enabled .Values.clickhouse.backup.backupCronJob.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "opik.name" $ }}-clickhouse-backup
  labels:
    {{- include "opik.labels" $  | nindent 4 }}
spec:
  schedule: "{{ .Values.clickhouse.backup.backupCronJob.schedule }}"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: {{ .Values.clickhouse.backup.backupCronJob.successfulJobsHistoryLimit }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: clickhouse-backup
            {{- with .Values.commonLabels }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        spec:
          serviceAccountName: {{ include "clickhouse.backup.serviceAccountName" . }}
          containers:
          - name: clickhouse-backup-job
            image: {{ .Values.clickhouse.backup.backupCronJob.image | default .Values.clickhouse.image }}
            {{- with .Values.clickhouse.imagePullSecrets }}
            imagePullSecrets:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            command:
            {{- .Values.clickhouse.backup.backupCronJob.command | toYaml | nindent 14 }}
            {{- with .Values.clickhouse.backup.backupCronJob.resources }}
            resources:
              {{- toYaml . | nindent 14 }}
            {{- end }}
            env:
            - name: CLICKHOUSE_BACKUP_BUCKET
              value: {{ include "common.tplvalues.render" (dict "value" .Values.clickhouse.backup.backupCronJob.bucketURL "context" $) }}
            - name: CLICKHOUSE_USER
              value: {{ .Values.clickhouse.adminUser.username }}
            - name: CLICKHOUSE_PASSWORD
            {{- if .Values.clickhouse.adminUser.useSecret.enabled }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "opik.name" .}}-{{ .Values.clickhouse.adminUser.secretname }}
                  key: {{ .Values.clickhouse.adminUser.password_key }}
            {{- else }}
              value: {{ .Values.clickhouse.adminUser.password }}
            {{- end }}
            {{- if .Values.clickhouse.backup.secretName }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.clickhouse.backup.secretName }}
                  key: {{ .Values.clickhouse.backup.accessKey | default "access_key_id" }}
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.clickhouse.backup.secretName }}
                  key: {{ .Values.clickhouse.backup.secretKey | default "access_key_secret" }}
            {{- else }}
            - name: AWS_ACCESS_KEY_ID
              value: ""
            - name: AWS_SECRET_ACCESS_KEY
              value: ""
            {{- end }}
          {{- with ( default .Values.clickhouse.nodeSelector .Values.clickhouse.backup.nodeSelector ) }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with ( default .Values.clickhouse.affinity .Values.clickhouse.backup.affinity ) }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with ( default .Values.clickhouse.tolerations .Values.clickhouse.backup.tolerations ) }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          restartPolicy: Never
      backoffLimit: 0
{{- end }}
