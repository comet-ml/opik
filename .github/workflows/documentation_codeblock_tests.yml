name: Documentation - Test codeblocks
on:
  workflow_dispatch:
    inputs:
      install_opik:
        description: 'Enable opik installation from source files'
        required: false
        default: 'false'
        type: choice
        options:
          - 'false'
          - 'true'
  schedule:
    - cron: '0 0 * * *'  # Run once a day at midnight UTC
jobs:
  collect_dirs:
    runs-on: ubuntu-latest
    outputs:
      dirs: ${{ steps.dirs.outputs.dirs }}
    steps:
      - uses: actions/checkout@v3
      - id: dirs
        working-directory: apps/opik-documentation/documentation
        run: echo "dirs=$(ls -d docs/*/ | jq --raw-input --slurp --compact-output 'split("\n")[:-1]')" >> ${GITHUB_OUTPUT}

  test:
    needs: collect_dirs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: ${{ fromJson(needs.collect_dirs.outputs.dirs) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ "${{ github.event.inputs.install_opik }}" = "true" ]; then
            pip install -e .
          fi
          
      - name: Run tests
        working-directory: apps/opik-documentation/documentation
        run: |
          pytest ${{ matrix.dir }} -v
