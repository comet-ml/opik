name: SDK E2E Tests
run-name: "SDK E2E Libraries Integration Tests ${{ github.ref_name }} by @${{ github.actor }}"
on:
    workflow_dispatch:
      inputs:
        libs:
          description: "Choose specific library to test against or all"
          required: true
          type: choice
          options:
            - all
            - adk
    schedule:
      - cron: "0 0 */2 * *"
    pull_request:
        paths:
          - 'sdks/python/**'
    push:
        branches:
          - 'main'
        paths:
          - 'sdks/python/**'
env:
  OPIK_ENABLE_LITELLM_MODELS_MONITORING: False
  OPIK_SENTRY_ENABLE: False
  SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
  LIBS: ${{ github.event.inputs.libs != '' && github.event.inputs.libs  || 'all' }}

jobs:
  init_environment:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      LIBS: ${{ steps.init.outputs.LIBS }}

    steps:
      - name: Make LIBS variable global (workaround for cron)
        id: init
        run: |
          echo "LIBS=${{ env.LIBS }}" >> $GITHUB_OUTPUT

      - name: Run latest Opik server
        env:
          OPIK_USAGE_REPORT_ENABLED: false
        run: |
          cd deployment/docker-compose
          export OPIK_FRONTEND_FLAVOR=guardrails
          docker compose --profile guardrails up -d --build

      - name: Check Opik server availability
        shell: bash
        run: |
          chmod +x ${{ github.workspace }}/tests_end_to_end/installer_utils/*.sh
          cd ${{ github.workspace }}/deployment/docker-compose
          echo "Check Docker pods are up"
          ${{ github.workspace }}/tests_end_to_end/installer_utils/check_docker_compose_pods.sh
          echo "Check backend health"
          ${{ github.workspace }}/tests_end_to_end/installer_utils/check_backend.sh

  adk_tests:
    needs: [ init_environment ]
    if: contains(fromJSON('["adk", "all"]'), needs.init_environment.outputs.LIBS)
    uses: ./.github/workflows/sdk-e2e-lib-adk-tests.yml
    secrets: inherit

  stop_opik_server:
    if: ${{ always() }}
    needs: [ adk_tests ]
    runs-on: cpu
    steps:
      - name: Stop opik server
        run: |
          cd ${{ github.workspace }}/deployment/docker-compose
          docker compose down
