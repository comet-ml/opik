/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { AlertAlertType } from "./AlertAlertType";
import { Webhook } from "./Webhook";
import { AlertTrigger } from "./AlertTrigger";

export const Alert: core.serialization.ObjectSchema<serializers.Alert.Raw, OpikApi.Alert> = core.serialization.object({
    id: core.serialization.string().optional(),
    name: core.serialization.string().optional(),
    enabled: core.serialization.boolean().optional(),
    alertType: core.serialization.property("alert_type", AlertAlertType.optional()),
    metadata: core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
    webhook: Webhook,
    triggers: core.serialization.list(AlertTrigger).optional(),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    createdBy: core.serialization.property("created_by", core.serialization.string().optional()),
    lastUpdatedAt: core.serialization.property("last_updated_at", core.serialization.date().optional()),
    lastUpdatedBy: core.serialization.property("last_updated_by", core.serialization.string().optional()),
});

export declare namespace Alert {
    export interface Raw {
        id?: string | null;
        name?: string | null;
        enabled?: boolean | null;
        alert_type?: AlertAlertType.Raw | null;
        metadata?: Record<string, string> | null;
        webhook: Webhook.Raw;
        triggers?: AlertTrigger.Raw[] | null;
        created_at?: string | null;
        created_by?: string | null;
        last_updated_at?: string | null;
        last_updated_by?: string | null;
    }
}
