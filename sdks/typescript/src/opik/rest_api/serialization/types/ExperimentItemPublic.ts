/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";

export const ExperimentItemPublic: core.serialization.ObjectSchema<
    serializers.ExperimentItemPublic.Raw,
    OpikApi.ExperimentItemPublic
> = core.serialization.object({
    id: core.serialization.string().optional(),
    experimentId: core.serialization.property("experiment_id", core.serialization.string()),
    datasetItemId: core.serialization.property("dataset_item_id", core.serialization.string()),
    traceId: core.serialization.property("trace_id", core.serialization.string()),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    lastUpdatedAt: core.serialization.property("last_updated_at", core.serialization.date().optional()),
    createdBy: core.serialization.property("created_by", core.serialization.string().optional()),
    lastUpdatedBy: core.serialization.property("last_updated_by", core.serialization.string().optional()),
});

export declare namespace ExperimentItemPublic {
    export interface Raw {
        id?: string | null;
        experiment_id: string;
        dataset_item_id: string;
        trace_id: string;
        created_at?: string | null;
        last_updated_at?: string | null;
        created_by?: string | null;
        last_updated_by?: string | null;
    }
}
