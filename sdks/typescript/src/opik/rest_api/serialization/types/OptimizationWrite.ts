/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { OptimizationWriteStatus } from "./OptimizationWriteStatus";
import { JsonNodeWrite } from "./JsonNodeWrite";

export const OptimizationWrite: core.serialization.ObjectSchema<
    serializers.OptimizationWrite.Raw,
    OpikApi.OptimizationWrite
> = core.serialization.object({
    id: core.serialization.string().optional(),
    name: core.serialization.string().optional(),
    datasetName: core.serialization.property("dataset_name", core.serialization.string()),
    objectiveName: core.serialization.property("objective_name", core.serialization.string()),
    status: OptimizationWriteStatus,
    metadata: JsonNodeWrite.optional(),
    lastUpdatedAt: core.serialization.property("last_updated_at", core.serialization.date().optional()),
});

export declare namespace OptimizationWrite {
    export interface Raw {
        id?: string | null;
        name?: string | null;
        dataset_name: string;
        objective_name: string;
        status: OptimizationWriteStatus.Raw;
        metadata?: JsonNodeWrite.Raw | null;
        last_updated_at?: string | null;
    }
}
