/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { Parser } from "./Parser";

export const UnknownFieldSet: core.serialization.ObjectSchema<
    serializers.UnknownFieldSet.Raw,
    OpikApi.UnknownFieldSet
> = core.serialization.object({
    empty: core.serialization.boolean().optional(),
    defaultInstanceForType: core.serialization.lazyObject(() => serializers.UnknownFieldSet).optional(),
    serializedSizeAsMessageSet: core.serialization.number().optional(),
    serializedSize: core.serialization.number().optional(),
    parserForType: Parser.optional(),
    initialized: core.serialization.boolean().optional(),
});

export declare namespace UnknownFieldSet {
    export interface Raw {
        empty?: boolean | null;
        defaultInstanceForType?: serializers.UnknownFieldSet.Raw | null;
        serializedSizeAsMessageSet?: number | null;
        serializedSize?: number | null;
        parserForType?: Parser.Raw | null;
        initialized?: boolean | null;
    }
}
