/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { ParserServiceDescriptorProto } from "./ParserServiceDescriptorProto";
import { ByteString } from "./ByteString";

export const ServiceDescriptorProto: core.serialization.ObjectSchema<
    serializers.ServiceDescriptorProto.Raw,
    OpikApi.ServiceDescriptorProto
> = core.serialization.object({
    unknownFields: core.serialization.lazyObject(() => serializers.UnknownFieldSet).optional(),
    name: core.serialization.string().optional(),
    defaultInstanceForType: core.serialization.lazyObject(() => serializers.ServiceDescriptorProto).optional(),
    optionsOrBuilder: core.serialization.lazyObject(() => serializers.ServiceOptionsOrBuilder).optional(),
    methodOrBuilderList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.MethodDescriptorProtoOrBuilder))
        .optional(),
    serializedSize: core.serialization.number().optional(),
    parserForType: ParserServiceDescriptorProto.optional(),
    methodCount: core.serialization.number().optional(),
    methodList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.MethodDescriptorProto))
        .optional(),
    nameBytes: ByteString.optional(),
    initialized: core.serialization.boolean().optional(),
    options: core.serialization.lazyObject(() => serializers.ServiceOptions).optional(),
    initializationErrorString: core.serialization.string().optional(),
    descriptorForType: core.serialization.lazyObject(() => serializers.Descriptor).optional(),
    allFields: core.serialization
        .record(
            core.serialization.string(),
            core.serialization.record(core.serialization.string(), core.serialization.unknown()),
        )
        .optional(),
    memoizedSerializedSize: core.serialization.number().optional(),
});

export declare namespace ServiceDescriptorProto {
    export interface Raw {
        unknownFields?: serializers.UnknownFieldSet.Raw | null;
        name?: string | null;
        defaultInstanceForType?: serializers.ServiceDescriptorProto.Raw | null;
        optionsOrBuilder?: serializers.ServiceOptionsOrBuilder.Raw | null;
        methodOrBuilderList?: serializers.MethodDescriptorProtoOrBuilder.Raw[] | null;
        serializedSize?: number | null;
        parserForType?: ParserServiceDescriptorProto.Raw | null;
        methodCount?: number | null;
        methodList?: serializers.MethodDescriptorProto.Raw[] | null;
        nameBytes?: ByteString.Raw | null;
        initialized?: boolean | null;
        options?: serializers.ServiceOptions.Raw | null;
        initializationErrorString?: string | null;
        descriptorForType?: serializers.Descriptor.Raw | null;
        allFields?: Record<string, Record<string, unknown>> | null;
        memoizedSerializedSize?: number | null;
    }
}
