/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { JsonListString } from "./JsonListString";
import { FeedbackScore } from "./FeedbackScore";
import { Comment } from "./Comment";
import { ExperimentItemTraceVisibilityMode } from "./ExperimentItemTraceVisibilityMode";

export const ExperimentItem: core.serialization.ObjectSchema<serializers.ExperimentItem.Raw, OpikApi.ExperimentItem> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        experimentId: core.serialization.property("experiment_id", core.serialization.string()),
        datasetItemId: core.serialization.property("dataset_item_id", core.serialization.string()),
        traceId: core.serialization.property("trace_id", core.serialization.string()),
        input: JsonListString.optional(),
        output: JsonListString.optional(),
        feedbackScores: core.serialization.property(
            "feedback_scores",
            core.serialization.list(FeedbackScore).optional(),
        ),
        comments: core.serialization.list(Comment).optional(),
        totalEstimatedCost: core.serialization.property("total_estimated_cost", core.serialization.number().optional()),
        duration: core.serialization.number().optional(),
        usage: core.serialization.record(core.serialization.string(), core.serialization.number()).optional(),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        lastUpdatedAt: core.serialization.property("last_updated_at", core.serialization.date().optional()),
        createdBy: core.serialization.property("created_by", core.serialization.string().optional()),
        lastUpdatedBy: core.serialization.property("last_updated_by", core.serialization.string().optional()),
        traceVisibilityMode: core.serialization.property(
            "trace_visibility_mode",
            ExperimentItemTraceVisibilityMode.optional(),
        ),
    });

export declare namespace ExperimentItem {
    export interface Raw {
        id?: string | null;
        experiment_id: string;
        dataset_item_id: string;
        trace_id: string;
        input?: JsonListString.Raw | null;
        output?: JsonListString.Raw | null;
        feedback_scores?: FeedbackScore.Raw[] | null;
        comments?: Comment.Raw[] | null;
        total_estimated_cost?: number | null;
        duration?: number | null;
        usage?: Record<string, number> | null;
        created_at?: string | null;
        last_updated_at?: string | null;
        created_by?: string | null;
        last_updated_by?: string | null;
        trace_visibility_mode?: ExperimentItemTraceVisibilityMode.Raw | null;
    }
}
