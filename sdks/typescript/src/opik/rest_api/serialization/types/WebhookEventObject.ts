/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { WebhookEventObjectEventType } from "./WebhookEventObjectEventType";

export const WebhookEventObject: core.serialization.ObjectSchema<
    serializers.WebhookEventObject.Raw,
    OpikApi.WebhookEventObject
> = core.serialization.object({
    id: core.serialization.string(),
    eventType: core.serialization.property("event_type", WebhookEventObjectEventType),
    alertId: core.serialization.property("alert_id", core.serialization.string()),
    workspaceId: core.serialization.property("workspace_id", core.serialization.string()),
    userName: core.serialization.property("user_name", core.serialization.string()),
    payload: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
    createdAt: core.serialization.property("created_at", core.serialization.date()),
    maxRetries: core.serialization.property("max_retries", core.serialization.number().optional()),
    url: core.serialization.string(),
    secret: core.serialization.string().optional(),
    headers: core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
});

export declare namespace WebhookEventObject {
    export interface Raw {
        id: string;
        event_type: WebhookEventObjectEventType.Raw;
        alert_id: string;
        workspace_id: string;
        user_name: string;
        payload: Record<string, unknown>;
        created_at: string;
        max_retries?: number | null;
        url: string;
        secret?: string | null;
        headers?: Record<string, string> | null;
    }
}
