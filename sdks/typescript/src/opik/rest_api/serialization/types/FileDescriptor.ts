/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";

export const FileDescriptor: core.serialization.ObjectSchema<serializers.FileDescriptor.Raw, OpikApi.FileDescriptor> =
    core.serialization.object({
        proto: core.serialization.lazyObject(() => serializers.FileDescriptorProto).optional(),
        options: core.serialization.lazyObject(() => serializers.FileOptions).optional(),
        messageTypes: core.serialization.list(core.serialization.lazyObject(() => serializers.Descriptor)).optional(),
        enumTypes: core.serialization.list(core.serialization.lazyObject(() => serializers.EnumDescriptor)).optional(),
        services: core.serialization
            .list(core.serialization.lazyObject(() => serializers.ServiceDescriptor))
            .optional(),
        extensions: core.serialization
            .list(core.serialization.lazyObject(() => serializers.FieldDescriptor))
            .optional(),
        dependencies: core.serialization
            .list(core.serialization.lazyObject(() => serializers.FileDescriptor))
            .optional(),
        publicDependencies: core.serialization
            .list(core.serialization.lazyObject(() => serializers.FileDescriptor))
            .optional(),
        name: core.serialization.string().optional(),
        package: core.serialization.string().optional(),
        file: core.serialization.lazyObject(() => serializers.FileDescriptor).optional(),
        fullName: core.serialization.string().optional(),
    });

export declare namespace FileDescriptor {
    export interface Raw {
        proto?: serializers.FileDescriptorProto.Raw | null;
        options?: serializers.FileOptions.Raw | null;
        messageTypes?: serializers.Descriptor.Raw[] | null;
        enumTypes?: serializers.EnumDescriptor.Raw[] | null;
        services?: serializers.ServiceDescriptor.Raw[] | null;
        extensions?: serializers.FieldDescriptor.Raw[] | null;
        dependencies?: serializers.FileDescriptor.Raw[] | null;
        publicDependencies?: serializers.FileDescriptor.Raw[] | null;
        name?: string | null;
        package?: string | null;
        file?: serializers.FileDescriptor.Raw | null;
        fullName?: string | null;
    }
}
