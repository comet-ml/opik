/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { AnnotationQueuePublicScope } from "./AnnotationQueuePublicScope";
import { AnnotationQueueReviewerPublic } from "./AnnotationQueueReviewerPublic";
import { FeedbackScoreAveragePublic } from "./FeedbackScoreAveragePublic";

export const AnnotationQueuePublic: core.serialization.ObjectSchema<
    serializers.AnnotationQueuePublic.Raw,
    OpikApi.AnnotationQueuePublic
> = core.serialization.object({
    id: core.serialization.string().optional(),
    projectId: core.serialization.property("project_id", core.serialization.string()),
    projectName: core.serialization.property("project_name", core.serialization.string().optional()),
    name: core.serialization.string(),
    description: core.serialization.string().optional(),
    instructions: core.serialization.string().optional(),
    scope: AnnotationQueuePublicScope,
    commentsEnabled: core.serialization.property("comments_enabled", core.serialization.boolean().optional()),
    feedbackDefinitionNames: core.serialization.property(
        "feedback_definition_names",
        core.serialization.list(core.serialization.string()).optional(),
    ),
    reviewers: core.serialization.list(AnnotationQueueReviewerPublic).optional(),
    feedbackScores: core.serialization.property(
        "feedback_scores",
        core.serialization.list(FeedbackScoreAveragePublic).optional(),
    ),
    itemsCount: core.serialization.property("items_count", core.serialization.number().optional()),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    createdBy: core.serialization.property("created_by", core.serialization.string().optional()),
    lastUpdatedAt: core.serialization.property("last_updated_at", core.serialization.date().optional()),
    lastUpdatedBy: core.serialization.property("last_updated_by", core.serialization.string().optional()),
});

export declare namespace AnnotationQueuePublic {
    export interface Raw {
        id?: string | null;
        project_id: string;
        project_name?: string | null;
        name: string;
        description?: string | null;
        instructions?: string | null;
        scope: AnnotationQueuePublicScope.Raw;
        comments_enabled?: boolean | null;
        feedback_definition_names?: string[] | null;
        reviewers?: AnnotationQueueReviewerPublic.Raw[] | null;
        feedback_scores?: FeedbackScoreAveragePublic.Raw[] | null;
        items_count?: number | null;
        created_at?: string | null;
        created_by?: string | null;
        last_updated_at?: string | null;
        last_updated_by?: string | null;
    }
}
