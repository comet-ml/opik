/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { TraceWrite } from "./TraceWrite";
import { SpanWrite } from "./SpanWrite";
import { FeedbackScoreWrite } from "./FeedbackScoreWrite";

export const ExperimentItemBulkRecordWrite: core.serialization.ObjectSchema<
    serializers.ExperimentItemBulkRecordWrite.Raw,
    OpikApi.ExperimentItemBulkRecordWrite
> = core.serialization.object({
    datasetItemId: core.serialization.property("dataset_item_id", core.serialization.string()),
    trace: TraceWrite.optional(),
    spans: core.serialization.list(SpanWrite).optional(),
    feedbackScores: core.serialization.property(
        "feedback_scores",
        core.serialization.list(FeedbackScoreWrite).optional(),
    ),
});

export declare namespace ExperimentItemBulkRecordWrite {
    export interface Raw {
        dataset_item_id: string;
        trace?: TraceWrite.Raw | null;
        spans?: SpanWrite.Raw[] | null;
        feedback_scores?: FeedbackScoreWrite.Raw[] | null;
    }
}
