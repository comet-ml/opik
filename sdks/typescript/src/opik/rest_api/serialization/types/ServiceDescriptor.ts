/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";

export const ServiceDescriptor: core.serialization.ObjectSchema<
    serializers.ServiceDescriptor.Raw,
    OpikApi.ServiceDescriptor
> = core.serialization.object({
    index: core.serialization.number().optional(),
    proto: core.serialization.lazyObject(() => serializers.ServiceDescriptorProto).optional(),
    options: core.serialization.lazyObject(() => serializers.ServiceOptions).optional(),
    fullName: core.serialization.string().optional(),
    file: core.serialization.lazyObject(() => serializers.FileDescriptor).optional(),
    methods: core.serialization.list(core.serialization.lazyObject(() => serializers.MethodDescriptor)).optional(),
    name: core.serialization.string().optional(),
});

export declare namespace ServiceDescriptor {
    export interface Raw {
        index?: number | null;
        proto?: serializers.ServiceDescriptorProto.Raw | null;
        options?: serializers.ServiceOptions.Raw | null;
        fullName?: string | null;
        file?: serializers.FileDescriptor.Raw | null;
        methods?: serializers.MethodDescriptor.Raw[] | null;
        name?: string | null;
    }
}
