/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { ByteString } from "./ByteString";
import { ParserFileDescriptorProto } from "./ParserFileDescriptorProto";
import { FileDescriptorProtoEdition } from "./FileDescriptorProtoEdition";

export const FileDescriptorProto: core.serialization.ObjectSchema<
    serializers.FileDescriptorProto.Raw,
    OpikApi.FileDescriptorProto
> = core.serialization.object({
    unknownFields: core.serialization.lazyObject(() => serializers.UnknownFieldSet).optional(),
    name: core.serialization.string().optional(),
    package: core.serialization.string().optional(),
    publicDependencyList: core.serialization.list(core.serialization.number()).optional(),
    messageTypeOrBuilderList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.DescriptorProtoOrBuilder))
        .optional(),
    serviceOrBuilderList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.ServiceDescriptorProtoOrBuilder))
        .optional(),
    sourceCodeInfoOrBuilder: core.serialization.lazyObject(() => serializers.SourceCodeInfoOrBuilder).optional(),
    defaultInstanceForType: core.serialization.lazyObject(() => serializers.FileDescriptorProto).optional(),
    publicDependencyCount: core.serialization.number().optional(),
    extensionOrBuilderList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.FieldDescriptorProtoOrBuilder))
        .optional(),
    enumTypeOrBuilderList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.EnumDescriptorProtoOrBuilder))
        .optional(),
    dependencyCount: core.serialization.number().optional(),
    messageTypeCount: core.serialization.number().optional(),
    serviceCount: core.serialization.number().optional(),
    extensionList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.FieldDescriptorProto))
        .optional(),
    enumTypeList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.EnumDescriptorProto))
        .optional(),
    optionsOrBuilder: core.serialization.lazyObject(() => serializers.FileOptionsOrBuilder).optional(),
    enumTypeCount: core.serialization.number().optional(),
    extensionCount: core.serialization.number().optional(),
    sourceCodeInfo: core.serialization.lazyObject(() => serializers.SourceCodeInfo).optional(),
    dependencyList: core.serialization.list(core.serialization.string()).optional(),
    weakDependencyList: core.serialization.list(core.serialization.number()).optional(),
    messageTypeList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.DescriptorProto))
        .optional(),
    weakDependencyCount: core.serialization.number().optional(),
    packageBytes: ByteString.optional(),
    serializedSize: core.serialization.number().optional(),
    parserForType: ParserFileDescriptorProto.optional(),
    serviceList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.ServiceDescriptorProto))
        .optional(),
    syntaxBytes: ByteString.optional(),
    syntax: core.serialization.string().optional(),
    nameBytes: ByteString.optional(),
    edition: FileDescriptorProtoEdition.optional(),
    initialized: core.serialization.boolean().optional(),
    options: core.serialization.lazyObject(() => serializers.FileOptions).optional(),
    initializationErrorString: core.serialization.string().optional(),
    descriptorForType: core.serialization.lazyObject(() => serializers.Descriptor).optional(),
    allFields: core.serialization
        .record(
            core.serialization.string(),
            core.serialization.record(core.serialization.string(), core.serialization.unknown()),
        )
        .optional(),
    memoizedSerializedSize: core.serialization.number().optional(),
});

export declare namespace FileDescriptorProto {
    export interface Raw {
        unknownFields?: serializers.UnknownFieldSet.Raw | null;
        name?: string | null;
        package?: string | null;
        publicDependencyList?: number[] | null;
        messageTypeOrBuilderList?: serializers.DescriptorProtoOrBuilder.Raw[] | null;
        serviceOrBuilderList?: serializers.ServiceDescriptorProtoOrBuilder.Raw[] | null;
        sourceCodeInfoOrBuilder?: serializers.SourceCodeInfoOrBuilder.Raw | null;
        defaultInstanceForType?: serializers.FileDescriptorProto.Raw | null;
        publicDependencyCount?: number | null;
        extensionOrBuilderList?: serializers.FieldDescriptorProtoOrBuilder.Raw[] | null;
        enumTypeOrBuilderList?: serializers.EnumDescriptorProtoOrBuilder.Raw[] | null;
        dependencyCount?: number | null;
        messageTypeCount?: number | null;
        serviceCount?: number | null;
        extensionList?: serializers.FieldDescriptorProto.Raw[] | null;
        enumTypeList?: serializers.EnumDescriptorProto.Raw[] | null;
        optionsOrBuilder?: serializers.FileOptionsOrBuilder.Raw | null;
        enumTypeCount?: number | null;
        extensionCount?: number | null;
        sourceCodeInfo?: serializers.SourceCodeInfo.Raw | null;
        dependencyList?: string[] | null;
        weakDependencyList?: number[] | null;
        messageTypeList?: serializers.DescriptorProto.Raw[] | null;
        weakDependencyCount?: number | null;
        packageBytes?: ByteString.Raw | null;
        serializedSize?: number | null;
        parserForType?: ParserFileDescriptorProto.Raw | null;
        serviceList?: serializers.ServiceDescriptorProto.Raw[] | null;
        syntaxBytes?: ByteString.Raw | null;
        syntax?: string | null;
        nameBytes?: ByteString.Raw | null;
        edition?: FileDescriptorProtoEdition.Raw | null;
        initialized?: boolean | null;
        options?: serializers.FileOptions.Raw | null;
        initializationErrorString?: string | null;
        descriptorForType?: serializers.Descriptor.Raw | null;
        allFields?: Record<string, Record<string, unknown>> | null;
        memoizedSerializedSize?: number | null;
    }
}
