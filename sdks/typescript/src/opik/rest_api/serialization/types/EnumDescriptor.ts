/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";

export const EnumDescriptor: core.serialization.ObjectSchema<serializers.EnumDescriptor.Raw, OpikApi.EnumDescriptor> =
    core.serialization.object({
        index: core.serialization.number().optional(),
        proto: core.serialization.lazyObject(() => serializers.EnumDescriptorProto).optional(),
        options: core.serialization.lazyObject(() => serializers.EnumOptions).optional(),
        fullName: core.serialization.string().optional(),
        file: core.serialization.lazyObject(() => serializers.FileDescriptor).optional(),
        containingType: core.serialization.lazyObject(() => serializers.Descriptor).optional(),
        values: core.serialization
            .list(core.serialization.lazyObject(() => serializers.EnumValueDescriptor))
            .optional(),
        name: core.serialization.string().optional(),
        closed: core.serialization.boolean().optional(),
    });

export declare namespace EnumDescriptor {
    export interface Raw {
        index?: number | null;
        proto?: serializers.EnumDescriptorProto.Raw | null;
        options?: serializers.EnumOptions.Raw | null;
        fullName?: string | null;
        file?: serializers.FileDescriptor.Raw | null;
        containingType?: serializers.Descriptor.Raw | null;
        values?: serializers.EnumValueDescriptor.Raw[] | null;
        name?: string | null;
        closed?: boolean | null;
    }
}
