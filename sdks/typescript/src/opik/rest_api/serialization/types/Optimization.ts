/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { OptimizationStatus } from "./OptimizationStatus";
import { JsonNode } from "./JsonNode";
import { FeedbackScoreAverage } from "./FeedbackScoreAverage";

export const Optimization: core.serialization.ObjectSchema<serializers.Optimization.Raw, OpikApi.Optimization> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        name: core.serialization.string().optional(),
        datasetName: core.serialization.property("dataset_name", core.serialization.string()),
        objectiveName: core.serialization.property("objective_name", core.serialization.string()),
        status: OptimizationStatus,
        metadata: JsonNode.optional(),
        datasetId: core.serialization.property("dataset_id", core.serialization.string().optional()),
        numTrials: core.serialization.property("num_trials", core.serialization.number().optional()),
        feedbackScores: core.serialization.property(
            "feedback_scores",
            core.serialization.list(FeedbackScoreAverage).optional(),
        ),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        createdBy: core.serialization.property("created_by", core.serialization.string().optional()),
        lastUpdatedAt: core.serialization.property("last_updated_at", core.serialization.date().optional()),
        lastUpdatedBy: core.serialization.property("last_updated_by", core.serialization.string().optional()),
    });

export declare namespace Optimization {
    export interface Raw {
        id?: string | null;
        name?: string | null;
        dataset_name: string;
        objective_name: string;
        status: OptimizationStatus.Raw;
        metadata?: JsonNode.Raw | null;
        dataset_id?: string | null;
        num_trials?: number | null;
        feedback_scores?: FeedbackScoreAverage.Raw[] | null;
        created_at?: string | null;
        created_by?: string | null;
        last_updated_at?: string | null;
        last_updated_by?: string | null;
    }
}
