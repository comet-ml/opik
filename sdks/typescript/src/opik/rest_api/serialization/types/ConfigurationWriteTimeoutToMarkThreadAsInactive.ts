/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { ConfigurationWriteTimeoutToMarkThreadAsInactiveUnitsItem } from "./ConfigurationWriteTimeoutToMarkThreadAsInactiveUnitsItem";

export const ConfigurationWriteTimeoutToMarkThreadAsInactive: core.serialization.ObjectSchema<
    serializers.ConfigurationWriteTimeoutToMarkThreadAsInactive.Raw,
    OpikApi.ConfigurationWriteTimeoutToMarkThreadAsInactive
> = core.serialization.object({
    seconds: core.serialization.number().optional(),
    zero: core.serialization.boolean().optional(),
    nano: core.serialization.number().optional(),
    negative: core.serialization.boolean().optional(),
    positive: core.serialization.boolean().optional(),
    units: core.serialization.list(ConfigurationWriteTimeoutToMarkThreadAsInactiveUnitsItem).optional(),
});

export declare namespace ConfigurationWriteTimeoutToMarkThreadAsInactive {
    export interface Raw {
        seconds?: number | null;
        zero?: boolean | null;
        nano?: number | null;
        negative?: boolean | null;
        positive?: boolean | null;
        units?: ConfigurationWriteTimeoutToMarkThreadAsInactiveUnitsItem.Raw[] | null;
    }
}
