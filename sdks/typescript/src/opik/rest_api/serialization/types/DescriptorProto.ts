/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { ParserDescriptorProto } from "./ParserDescriptorProto";
import { ByteString } from "./ByteString";

export const DescriptorProto: core.serialization.ObjectSchema<
    serializers.DescriptorProto.Raw,
    OpikApi.DescriptorProto
> = core.serialization.object({
    unknownFields: core.serialization.lazyObject(() => serializers.UnknownFieldSet).optional(),
    name: core.serialization.string().optional(),
    defaultInstanceForType: core.serialization.lazyObject(() => serializers.DescriptorProto).optional(),
    extensionOrBuilderList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.FieldDescriptorProtoOrBuilder))
        .optional(),
    nestedTypeOrBuilderList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.DescriptorProtoOrBuilder))
        .optional(),
    enumTypeOrBuilderList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.EnumDescriptorProtoOrBuilder))
        .optional(),
    extensionRangeOrBuilderList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.ExtensionRangeOrBuilder))
        .optional(),
    oneofDeclOrBuilderList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.OneofDescriptorProtoOrBuilder))
        .optional(),
    reservedRangeOrBuilderList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.ReservedRangeOrBuilder))
        .optional(),
    extensionList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.FieldDescriptorProto))
        .optional(),
    nestedTypeList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.DescriptorProto))
        .optional(),
    enumTypeList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.EnumDescriptorProto))
        .optional(),
    oneofDeclList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.OneofDescriptorProto))
        .optional(),
    reservedRangeCount: core.serialization.number().optional(),
    reservedNameCount: core.serialization.number().optional(),
    fieldOrBuilderList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.FieldDescriptorProtoOrBuilder))
        .optional(),
    optionsOrBuilder: core.serialization.lazyObject(() => serializers.MessageOptionsOrBuilder).optional(),
    reservedRangeList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.ReservedRange))
        .optional(),
    reservedNameList: core.serialization.list(core.serialization.string()).optional(),
    extensionRangeList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.ExtensionRange))
        .optional(),
    oneofDeclCount: core.serialization.number().optional(),
    nestedTypeCount: core.serialization.number().optional(),
    enumTypeCount: core.serialization.number().optional(),
    extensionCount: core.serialization.number().optional(),
    extensionRangeCount: core.serialization.number().optional(),
    serializedSize: core.serialization.number().optional(),
    parserForType: ParserDescriptorProto.optional(),
    fieldList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.FieldDescriptorProto))
        .optional(),
    nameBytes: ByteString.optional(),
    fieldCount: core.serialization.number().optional(),
    initialized: core.serialization.boolean().optional(),
    options: core.serialization.lazyObject(() => serializers.MessageOptions).optional(),
    initializationErrorString: core.serialization.string().optional(),
    descriptorForType: core.serialization.lazyObject(() => serializers.Descriptor).optional(),
    allFields: core.serialization
        .record(
            core.serialization.string(),
            core.serialization.record(core.serialization.string(), core.serialization.unknown()),
        )
        .optional(),
    memoizedSerializedSize: core.serialization.number().optional(),
});

export declare namespace DescriptorProto {
    export interface Raw {
        unknownFields?: serializers.UnknownFieldSet.Raw | null;
        name?: string | null;
        defaultInstanceForType?: serializers.DescriptorProto.Raw | null;
        extensionOrBuilderList?: serializers.FieldDescriptorProtoOrBuilder.Raw[] | null;
        nestedTypeOrBuilderList?: serializers.DescriptorProtoOrBuilder.Raw[] | null;
        enumTypeOrBuilderList?: serializers.EnumDescriptorProtoOrBuilder.Raw[] | null;
        extensionRangeOrBuilderList?: serializers.ExtensionRangeOrBuilder.Raw[] | null;
        oneofDeclOrBuilderList?: serializers.OneofDescriptorProtoOrBuilder.Raw[] | null;
        reservedRangeOrBuilderList?: serializers.ReservedRangeOrBuilder.Raw[] | null;
        extensionList?: serializers.FieldDescriptorProto.Raw[] | null;
        nestedTypeList?: serializers.DescriptorProto.Raw[] | null;
        enumTypeList?: serializers.EnumDescriptorProto.Raw[] | null;
        oneofDeclList?: serializers.OneofDescriptorProto.Raw[] | null;
        reservedRangeCount?: number | null;
        reservedNameCount?: number | null;
        fieldOrBuilderList?: serializers.FieldDescriptorProtoOrBuilder.Raw[] | null;
        optionsOrBuilder?: serializers.MessageOptionsOrBuilder.Raw | null;
        reservedRangeList?: serializers.ReservedRange.Raw[] | null;
        reservedNameList?: string[] | null;
        extensionRangeList?: serializers.ExtensionRange.Raw[] | null;
        oneofDeclCount?: number | null;
        nestedTypeCount?: number | null;
        enumTypeCount?: number | null;
        extensionCount?: number | null;
        extensionRangeCount?: number | null;
        serializedSize?: number | null;
        parserForType?: ParserDescriptorProto.Raw | null;
        fieldList?: serializers.FieldDescriptorProto.Raw[] | null;
        nameBytes?: ByteString.Raw | null;
        fieldCount?: number | null;
        initialized?: boolean | null;
        options?: serializers.MessageOptions.Raw | null;
        initializationErrorString?: string | null;
        descriptorForType?: serializers.Descriptor.Raw | null;
        allFields?: Record<string, Record<string, unknown>> | null;
        memoizedSerializedSize?: number | null;
    }
}
