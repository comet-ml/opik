/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { FeatureSetOrBuilderRepeatedFieldEncoding } from "./FeatureSetOrBuilderRepeatedFieldEncoding";
import { FeatureSetOrBuilderEnforceNamingStyle } from "./FeatureSetOrBuilderEnforceNamingStyle";
import { FeatureSetOrBuilderMessageEncoding } from "./FeatureSetOrBuilderMessageEncoding";
import { FeatureSetOrBuilderUtf8Validation } from "./FeatureSetOrBuilderUtf8Validation";
import { FeatureSetOrBuilderFieldPresence } from "./FeatureSetOrBuilderFieldPresence";
import { FeatureSetOrBuilderJsonFormat } from "./FeatureSetOrBuilderJsonFormat";
import { FeatureSetOrBuilderEnumType } from "./FeatureSetOrBuilderEnumType";

export const FeatureSetOrBuilder: core.serialization.ObjectSchema<
    serializers.FeatureSetOrBuilder.Raw,
    OpikApi.FeatureSetOrBuilder
> = core.serialization.object({
    repeatedFieldEncoding: FeatureSetOrBuilderRepeatedFieldEncoding.optional(),
    enforceNamingStyle: FeatureSetOrBuilderEnforceNamingStyle.optional(),
    messageEncoding: FeatureSetOrBuilderMessageEncoding.optional(),
    utf8Validation: FeatureSetOrBuilderUtf8Validation.optional(),
    fieldPresence: FeatureSetOrBuilderFieldPresence.optional(),
    jsonFormat: FeatureSetOrBuilderJsonFormat.optional(),
    enumType: FeatureSetOrBuilderEnumType.optional(),
    defaultInstanceForType: core.serialization.lazyObject(() => serializers.Message).optional(),
    initializationErrorString: core.serialization.string().optional(),
    unknownFields: core.serialization.lazyObject(() => serializers.UnknownFieldSet).optional(),
    descriptorForType: core.serialization.lazyObject(() => serializers.Descriptor).optional(),
    allFields: core.serialization
        .record(
            core.serialization.string(),
            core.serialization.record(core.serialization.string(), core.serialization.unknown()),
        )
        .optional(),
    initialized: core.serialization.boolean().optional(),
});

export declare namespace FeatureSetOrBuilder {
    export interface Raw {
        repeatedFieldEncoding?: FeatureSetOrBuilderRepeatedFieldEncoding.Raw | null;
        enforceNamingStyle?: FeatureSetOrBuilderEnforceNamingStyle.Raw | null;
        messageEncoding?: FeatureSetOrBuilderMessageEncoding.Raw | null;
        utf8Validation?: FeatureSetOrBuilderUtf8Validation.Raw | null;
        fieldPresence?: FeatureSetOrBuilderFieldPresence.Raw | null;
        jsonFormat?: FeatureSetOrBuilderJsonFormat.Raw | null;
        enumType?: FeatureSetOrBuilderEnumType.Raw | null;
        defaultInstanceForType?: serializers.Message.Raw | null;
        initializationErrorString?: string | null;
        unknownFields?: serializers.UnknownFieldSet.Raw | null;
        descriptorForType?: serializers.Descriptor.Raw | null;
        allFields?: Record<string, Record<string, unknown>> | null;
        initialized?: boolean | null;
    }
}
