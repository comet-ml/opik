/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { WebhookPublic } from "./WebhookPublic";
import { AlertTriggerPublic } from "./AlertTriggerPublic";

export const AlertPublic: core.serialization.ObjectSchema<serializers.AlertPublic.Raw, OpikApi.AlertPublic> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        name: core.serialization.string().optional(),
        enabled: core.serialization.boolean().optional(),
        webhook: WebhookPublic,
        triggers: core.serialization.list(AlertTriggerPublic).optional(),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        createdBy: core.serialization.property("created_by", core.serialization.string().optional()),
        lastUpdatedAt: core.serialization.property("last_updated_at", core.serialization.date().optional()),
        lastUpdatedBy: core.serialization.property("last_updated_by", core.serialization.string().optional()),
    });

export declare namespace AlertPublic {
    export interface Raw {
        id?: string | null;
        name?: string | null;
        enabled?: boolean | null;
        webhook: WebhookPublic.Raw;
        triggers?: AlertTriggerPublic.Raw[] | null;
        created_at?: string | null;
        created_by?: string | null;
        last_updated_at?: string | null;
        last_updated_by?: string | null;
    }
}
