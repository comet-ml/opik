/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as core from "../../core";
import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import { PercentageValueStatPublic } from "./PercentageValueStatPublic";
import { CountValueStatPublic } from "./CountValueStatPublic";
import { AvgValueStatPublic } from "./AvgValueStatPublic";

const _Base = core.serialization.object({
    name: core.serialization.string().optional(),
});
export const ProjectStatItemObjectPublic: core.serialization.Schema<
    serializers.ProjectStatItemObjectPublic.Raw,
    OpikApi.ProjectStatItemObjectPublic
> = core.serialization
    .union("type", {
        PERCENTAGE: PercentageValueStatPublic.extend(_Base),
        COUNT: CountValueStatPublic.extend(_Base),
        AVG: AvgValueStatPublic.extend(_Base),
    })
    .transform<OpikApi.ProjectStatItemObjectPublic>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace ProjectStatItemObjectPublic {
    export type Raw =
        | ProjectStatItemObjectPublic.Percentage
        | ProjectStatItemObjectPublic.Count
        | ProjectStatItemObjectPublic.Avg;

    export interface Percentage extends _Base, PercentageValueStatPublic.Raw {
        type: "PERCENTAGE";
    }

    export interface Count extends _Base, CountValueStatPublic.Raw {
        type: "COUNT";
    }

    export interface Avg extends _Base, AvgValueStatPublic.Raw {
        type: "AVG";
    }

    export interface _Base {
        name?: string | null;
    }
}
