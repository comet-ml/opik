/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";

export const SourceCodeInfoOrBuilder: core.serialization.ObjectSchema<
    serializers.SourceCodeInfoOrBuilder.Raw,
    OpikApi.SourceCodeInfoOrBuilder
> = core.serialization.object({
    locationOrBuilderList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.LocationOrBuilder))
        .optional(),
    locationList: core.serialization.list(core.serialization.lazyObject(() => serializers.Location)).optional(),
    locationCount: core.serialization.number().optional(),
    defaultInstanceForType: core.serialization.lazyObject(() => serializers.Message).optional(),
    initializationErrorString: core.serialization.string().optional(),
    unknownFields: core.serialization.lazyObject(() => serializers.UnknownFieldSet).optional(),
    descriptorForType: core.serialization.lazyObject(() => serializers.Descriptor).optional(),
    allFields: core.serialization
        .record(
            core.serialization.string(),
            core.serialization.record(core.serialization.string(), core.serialization.unknown()),
        )
        .optional(),
    initialized: core.serialization.boolean().optional(),
});

export declare namespace SourceCodeInfoOrBuilder {
    export interface Raw {
        locationOrBuilderList?: serializers.LocationOrBuilder.Raw[] | null;
        locationList?: serializers.Location.Raw[] | null;
        locationCount?: number | null;
        defaultInstanceForType?: serializers.Message.Raw | null;
        initializationErrorString?: string | null;
        unknownFields?: serializers.UnknownFieldSet.Raw | null;
        descriptorForType?: serializers.Descriptor.Raw | null;
        allFields?: Record<string, Record<string, unknown>> | null;
        initialized?: boolean | null;
    }
}
