/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { ScopeSpansOrBuilder } from "./ScopeSpansOrBuilder";
import { ResourceOrBuilder } from "./ResourceOrBuilder";
import { ByteString } from "./ByteString";
import { ParserResourceSpans } from "./ParserResourceSpans";

export const ResourceSpans: core.serialization.ObjectSchema<serializers.ResourceSpans.Raw, OpikApi.ResourceSpans> =
    core.serialization.object({
        unknownFields: core.serialization.lazyObject(() => serializers.UnknownFieldSet).optional(),
        resource: core.serialization.lazyObject(() => serializers.Resource).optional(),
        defaultInstanceForType: core.serialization.lazyObject(() => serializers.ResourceSpans).optional(),
        scopeSpansOrBuilderList: core.serialization.list(ScopeSpansOrBuilder).optional(),
        resourceOrBuilder: ResourceOrBuilder.optional(),
        scopeSpansList: core.serialization.list(core.serialization.lazyObject(() => serializers.ScopeSpans)).optional(),
        scopeSpansCount: core.serialization.number().optional(),
        schemaUrlBytes: ByteString.optional(),
        serializedSize: core.serialization.number().optional(),
        parserForType: ParserResourceSpans.optional(),
        schemaUrl: core.serialization.string().optional(),
        initialized: core.serialization.boolean().optional(),
        initializationErrorString: core.serialization.string().optional(),
        descriptorForType: core.serialization.lazyObject(() => serializers.Descriptor).optional(),
        allFields: core.serialization
            .record(
                core.serialization.string(),
                core.serialization.record(core.serialization.string(), core.serialization.unknown()),
            )
            .optional(),
        memoizedSerializedSize: core.serialization.number().optional(),
    });

export declare namespace ResourceSpans {
    export interface Raw {
        unknownFields?: serializers.UnknownFieldSet.Raw | null;
        resource?: serializers.Resource.Raw | null;
        defaultInstanceForType?: serializers.ResourceSpans.Raw | null;
        scopeSpansOrBuilderList?: ScopeSpansOrBuilder.Raw[] | null;
        resourceOrBuilder?: ResourceOrBuilder.Raw | null;
        scopeSpansList?: serializers.ScopeSpans.Raw[] | null;
        scopeSpansCount?: number | null;
        schemaUrlBytes?: ByteString.Raw | null;
        serializedSize?: number | null;
        parserForType?: ParserResourceSpans.Raw | null;
        schemaUrl?: string | null;
        initialized?: boolean | null;
        initializationErrorString?: string | null;
        descriptorForType?: serializers.Descriptor.Raw | null;
        allFields?: Record<string, Record<string, unknown>> | null;
        memoizedSerializedSize?: number | null;
    }
}
