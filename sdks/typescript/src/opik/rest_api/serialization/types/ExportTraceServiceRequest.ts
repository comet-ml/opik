/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { ResourceSpansOrBuilder } from "./ResourceSpansOrBuilder";
import { ParserExportTraceServiceRequest } from "./ParserExportTraceServiceRequest";

export const ExportTraceServiceRequest: core.serialization.ObjectSchema<
    serializers.ExportTraceServiceRequest.Raw,
    OpikApi.ExportTraceServiceRequest
> = core.serialization.object({
    unknownFields: core.serialization.lazyObject(() => serializers.UnknownFieldSet).optional(),
    defaultInstanceForType: core.serialization.lazyObject(() => serializers.ExportTraceServiceRequest).optional(),
    resourceSpansOrBuilderList: core.serialization.list(ResourceSpansOrBuilder).optional(),
    serializedSize: core.serialization.number().optional(),
    resourceSpansList: core.serialization
        .list(core.serialization.lazyObject(() => serializers.ResourceSpans))
        .optional(),
    resourceSpansCount: core.serialization.number().optional(),
    parserForType: ParserExportTraceServiceRequest.optional(),
    initialized: core.serialization.boolean().optional(),
    initializationErrorString: core.serialization.string().optional(),
    descriptorForType: core.serialization.lazyObject(() => serializers.Descriptor).optional(),
    allFields: core.serialization
        .record(
            core.serialization.string(),
            core.serialization.record(core.serialization.string(), core.serialization.unknown()),
        )
        .optional(),
    memoizedSerializedSize: core.serialization.number().optional(),
});

export declare namespace ExportTraceServiceRequest {
    export interface Raw {
        unknownFields?: serializers.UnknownFieldSet.Raw | null;
        defaultInstanceForType?: serializers.ExportTraceServiceRequest.Raw | null;
        resourceSpansOrBuilderList?: ResourceSpansOrBuilder.Raw[] | null;
        serializedSize?: number | null;
        resourceSpansList?: serializers.ResourceSpans.Raw[] | null;
        resourceSpansCount?: number | null;
        parserForType?: ParserExportTraceServiceRequest.Raw | null;
        initialized?: boolean | null;
        initializationErrorString?: string | null;
        descriptorForType?: serializers.Descriptor.Raw | null;
        allFields?: Record<string, Record<string, unknown>> | null;
        memoizedSerializedSize?: number | null;
    }
}
