/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { AnnotationQueueWriteScope } from "./AnnotationQueueWriteScope";

export const AnnotationQueueWrite: core.serialization.ObjectSchema<
    serializers.AnnotationQueueWrite.Raw,
    OpikApi.AnnotationQueueWrite
> = core.serialization.object({
    id: core.serialization.string().optional(),
    projectId: core.serialization.property("project_id", core.serialization.string()),
    name: core.serialization.string(),
    description: core.serialization.string().optional(),
    instructions: core.serialization.string().optional(),
    scope: AnnotationQueueWriteScope,
    commentsEnabled: core.serialization.property("comments_enabled", core.serialization.boolean().optional()),
    feedbackDefinitions: core.serialization.property(
        "feedback_definitions",
        core.serialization.list(core.serialization.string()).optional(),
    ),
});

export declare namespace AnnotationQueueWrite {
    export interface Raw {
        id?: string | null;
        project_id: string;
        name: string;
        description?: string | null;
        instructions?: string | null;
        scope: AnnotationQueueWriteScope.Raw;
        comments_enabled?: boolean | null;
        feedback_definitions?: string[] | null;
    }
}
