/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";

export const OneofDescriptor: core.serialization.ObjectSchema<
    serializers.OneofDescriptor.Raw,
    OpikApi.OneofDescriptor
> = core.serialization.object({
    index: core.serialization.number().optional(),
    proto: core.serialization.lazyObject(() => serializers.OneofDescriptorProto).optional(),
    options: core.serialization.lazyObject(() => serializers.OneofOptions).optional(),
    fullName: core.serialization.string().optional(),
    file: core.serialization.lazyObject(() => serializers.FileDescriptor).optional(),
    containingType: core.serialization.lazyObject(() => serializers.Descriptor).optional(),
    fieldCount: core.serialization.number().optional(),
    name: core.serialization.string().optional(),
});

export declare namespace OneofDescriptor {
    export interface Raw {
        index?: number | null;
        proto?: serializers.OneofDescriptorProto.Raw | null;
        options?: serializers.OneofOptions.Raw | null;
        fullName?: string | null;
        file?: serializers.FileDescriptor.Raw | null;
        containingType?: serializers.Descriptor.Raw | null;
        fieldCount?: number | null;
        name?: string | null;
    }
}
