/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { AlertTriggerConfigType } from "./AlertTriggerConfigType";

export const AlertTriggerConfig: core.serialization.ObjectSchema<
    serializers.AlertTriggerConfig.Raw,
    OpikApi.AlertTriggerConfig
> = core.serialization.object({
    id: core.serialization.string().optional(),
    alertTriggerId: core.serialization.property("alert_trigger_id", core.serialization.string().optional()),
    type: AlertTriggerConfigType,
    configValue: core.serialization.property(
        "config_value",
        core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
    ),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    createdBy: core.serialization.property("created_by", core.serialization.string().optional()),
    lastUpdatedAt: core.serialization.property("last_updated_at", core.serialization.date().optional()),
    lastUpdatedBy: core.serialization.property("last_updated_by", core.serialization.string().optional()),
});

export declare namespace AlertTriggerConfig {
    export interface Raw {
        id?: string | null;
        alert_trigger_id?: string | null;
        type: AlertTriggerConfigType.Raw;
        config_value?: Record<string, string> | null;
        created_at?: string | null;
        created_by?: string | null;
        last_updated_at?: string | null;
        last_updated_by?: string | null;
    }
}
