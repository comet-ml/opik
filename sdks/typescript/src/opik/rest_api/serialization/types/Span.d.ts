/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { SpanType } from "./SpanType";
import { JsonNode } from "./JsonNode";
import { FeedbackScore } from "./FeedbackScore";
export declare const Span: core.serialization.ObjectSchema<serializers.Span.Raw, OpikApi.Span>;
export declare namespace Span {
    interface Raw {
        id?: string | null;
        project_name?: string | null;
        project_id?: string | null;
        trace_id: string;
        parent_span_id?: string | null;
        name: string;
        type: SpanType.Raw;
        start_time: string;
        end_time?: string | null;
        input?: JsonNode.Raw | null;
        output?: JsonNode.Raw | null;
        metadata?: JsonNode.Raw | null;
        model?: string | null;
        provider?: string | null;
        tags?: string[] | null;
        usage?: Record<string, number> | null;
        created_at?: string | null;
        last_updated_at?: string | null;
        created_by?: string | null;
        last_updated_by?: string | null;
        feedback_scores?: FeedbackScore.Raw[] | null;
        total_estimated_cost?: number | null;
    }
}
