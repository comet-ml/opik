/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { Trace } from "./Trace";
import { Span } from "./Span";
import { FeedbackScore } from "./FeedbackScore";

export const ExperimentItemBulkRecord: core.serialization.ObjectSchema<
    serializers.ExperimentItemBulkRecord.Raw,
    OpikApi.ExperimentItemBulkRecord
> = core.serialization.object({
    datasetItemId: core.serialization.property("dataset_item_id", core.serialization.string()),
    trace: Trace.optional(),
    spans: core.serialization.list(Span).optional(),
    feedbackScores: core.serialization.property("feedback_scores", core.serialization.list(FeedbackScore).optional()),
});

export declare namespace ExperimentItemBulkRecord {
    export interface Raw {
        dataset_item_id: string;
        trace?: Trace.Raw | null;
        spans?: Span.Raw[] | null;
        feedback_scores?: FeedbackScore.Raw[] | null;
    }
}
