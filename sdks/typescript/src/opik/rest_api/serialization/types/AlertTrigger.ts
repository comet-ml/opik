/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { AlertTriggerEventType } from "./AlertTriggerEventType";
import { AlertTriggerConfig } from "./AlertTriggerConfig";

export const AlertTrigger: core.serialization.ObjectSchema<serializers.AlertTrigger.Raw, OpikApi.AlertTrigger> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        alertId: core.serialization.property("alert_id", core.serialization.string().optional()),
        eventType: core.serialization.property("event_type", AlertTriggerEventType),
        triggerConfigs: core.serialization.property(
            "trigger_configs",
            core.serialization.list(AlertTriggerConfig).optional(),
        ),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        createdBy: core.serialization.property("created_by", core.serialization.string().optional()),
    });

export declare namespace AlertTrigger {
    export interface Raw {
        id?: string | null;
        alert_id?: string | null;
        event_type: AlertTriggerEventType.Raw;
        trigger_configs?: AlertTriggerConfig.Raw[] | null;
        created_at?: string | null;
        created_by?: string | null;
    }
}
