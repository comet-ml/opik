/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { JsonSchemaElement } from "./JsonSchemaElement";

export const JsonObjectSchema: core.serialization.ObjectSchema<
    serializers.JsonObjectSchema.Raw,
    OpikApi.JsonObjectSchema
> = core.serialization.object({
    type: core.serialization.string().optional(),
    description: core.serialization.string().optional(),
    properties: core.serialization.record(core.serialization.string(), JsonSchemaElement).optional(),
    required: core.serialization.list(core.serialization.string()).optional(),
    additionalProperties: core.serialization.boolean().optional(),
    defs: core.serialization.property(
        "$defs",
        core.serialization.record(core.serialization.string(), JsonSchemaElement).optional()
    ),
});

export declare namespace JsonObjectSchema {
    interface Raw {
        type?: string | null;
        description?: string | null;
        properties?: Record<string, JsonSchemaElement.Raw> | null;
        required?: string[] | null;
        additionalProperties?: boolean | null;
        $defs?: Record<string, JsonSchemaElement.Raw> | null;
    }
}
