/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { ByteString } from "./ByteString";
import { AnyValueOrBuilderValueCase } from "./AnyValueOrBuilderValueCase";

export const AnyValueOrBuilder: core.serialization.ObjectSchema<
    serializers.AnyValueOrBuilder.Raw,
    OpikApi.AnyValueOrBuilder
> = core.serialization.object({
    kvlistValueOrBuilder: core.serialization.lazyObject(() => serializers.KeyValueListOrBuilder).optional(),
    stringValueBytes: ByteString.optional(),
    arrayValueOrBuilder: core.serialization.lazyObject(() => serializers.ArrayValueOrBuilder).optional(),
    intValue: core.serialization.number().optional(),
    valueCase: AnyValueOrBuilderValueCase.optional(),
    boolValue: core.serialization.boolean().optional(),
    arrayValue: core.serialization.lazyObject(() => serializers.ArrayValue).optional(),
    kvlistValue: core.serialization.lazyObject(() => serializers.KeyValueList).optional(),
    bytesValue: ByteString.optional(),
    doubleValue: core.serialization.number().optional(),
    stringValue: core.serialization.string().optional(),
    defaultInstanceForType: core.serialization.lazyObject(() => serializers.Message).optional(),
    initializationErrorString: core.serialization.string().optional(),
    unknownFields: core.serialization.lazyObject(() => serializers.UnknownFieldSet).optional(),
    descriptorForType: core.serialization.lazyObject(() => serializers.Descriptor).optional(),
    allFields: core.serialization
        .record(
            core.serialization.string(),
            core.serialization.record(core.serialization.string(), core.serialization.unknown()),
        )
        .optional(),
    initialized: core.serialization.boolean().optional(),
});

export declare namespace AnyValueOrBuilder {
    export interface Raw {
        kvlistValueOrBuilder?: serializers.KeyValueListOrBuilder.Raw | null;
        stringValueBytes?: ByteString.Raw | null;
        arrayValueOrBuilder?: serializers.ArrayValueOrBuilder.Raw | null;
        intValue?: number | null;
        valueCase?: AnyValueOrBuilderValueCase.Raw | null;
        boolValue?: boolean | null;
        arrayValue?: serializers.ArrayValue.Raw | null;
        kvlistValue?: serializers.KeyValueList.Raw | null;
        bytesValue?: ByteString.Raw | null;
        doubleValue?: number | null;
        stringValue?: string | null;
        defaultInstanceForType?: serializers.Message.Raw | null;
        initializationErrorString?: string | null;
        unknownFields?: serializers.UnknownFieldSet.Raw | null;
        descriptorForType?: serializers.Descriptor.Raw | null;
        allFields?: Record<string, Record<string, unknown>> | null;
        initialized?: boolean | null;
    }
}
