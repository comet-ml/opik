/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { AssistantMessageRole } from "./AssistantMessageRole";
import { ToolCall } from "./ToolCall";
import { FunctionCall } from "./FunctionCall";

export const AssistantMessage: core.serialization.ObjectSchema<
    serializers.AssistantMessage.Raw,
    OpikApi.AssistantMessage
> = core.serialization.object({
    role: AssistantMessageRole.optional(),
    content: core.serialization.string().optional(),
    name: core.serialization.string().optional(),
    toolCalls: core.serialization.property("tool_calls", core.serialization.list(ToolCall).optional()),
    refusal: core.serialization.boolean().optional(),
    functionCall: core.serialization.property("function_call", FunctionCall.optional()),
});

export declare namespace AssistantMessage {
    interface Raw {
        role?: AssistantMessageRole.Raw | null;
        content?: string | null;
        name?: string | null;
        tool_calls?: ToolCall.Raw[] | null;
        refusal?: boolean | null;
        function_call?: FunctionCall.Raw | null;
    }
}
