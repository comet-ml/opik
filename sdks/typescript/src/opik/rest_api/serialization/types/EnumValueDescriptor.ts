/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";

export const EnumValueDescriptor: core.serialization.ObjectSchema<
    serializers.EnumValueDescriptor.Raw,
    OpikApi.EnumValueDescriptor
> = core.serialization.object({
    index: core.serialization.number().optional(),
    proto: core.serialization.lazyObject(() => serializers.EnumValueDescriptorProto).optional(),
    options: core.serialization.lazyObject(() => serializers.EnumValueOptions).optional(),
    fullName: core.serialization.string().optional(),
    type: core.serialization.lazyObject(() => serializers.EnumDescriptor).optional(),
    name: core.serialization.string().optional(),
    file: core.serialization.lazyObject(() => serializers.FileDescriptor).optional(),
    number: core.serialization.number().optional(),
});

export declare namespace EnumValueDescriptor {
    export interface Raw {
        index?: number | null;
        proto?: serializers.EnumValueDescriptorProto.Raw | null;
        options?: serializers.EnumValueOptions.Raw | null;
        fullName?: string | null;
        type?: serializers.EnumDescriptor.Raw | null;
        name?: string | null;
        file?: serializers.FileDescriptor.Raw | null;
        number?: number | null;
    }
}
