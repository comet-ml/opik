/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { AlertTriggerPublicEventType } from "./AlertTriggerPublicEventType";
import { AlertTriggerConfigPublic } from "./AlertTriggerConfigPublic";

export const AlertTriggerPublic: core.serialization.ObjectSchema<
    serializers.AlertTriggerPublic.Raw,
    OpikApi.AlertTriggerPublic
> = core.serialization.object({
    id: core.serialization.string().optional(),
    alertId: core.serialization.property("alert_id", core.serialization.string().optional()),
    eventType: core.serialization.property("event_type", AlertTriggerPublicEventType),
    triggerConfigs: core.serialization.property(
        "trigger_configs",
        core.serialization.list(AlertTriggerConfigPublic).optional(),
    ),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    createdBy: core.serialization.property("created_by", core.serialization.string().optional()),
});

export declare namespace AlertTriggerPublic {
    export interface Raw {
        id?: string | null;
        alert_id?: string | null;
        event_type: AlertTriggerPublicEventType.Raw;
        trigger_configs?: AlertTriggerConfigPublic.Raw[] | null;
        created_at?: string | null;
        created_by?: string | null;
    }
}
