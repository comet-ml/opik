/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { LlmAsJudgeModelParametersWrite } from "./LlmAsJudgeModelParametersWrite";
import { LlmAsJudgeMessageWrite } from "./LlmAsJudgeMessageWrite";
import { LlmAsJudgeOutputSchemaWrite } from "./LlmAsJudgeOutputSchemaWrite";

export const LlmAsJudgeCodeWrite: core.serialization.ObjectSchema<
    serializers.LlmAsJudgeCodeWrite.Raw,
    OpikApi.LlmAsJudgeCodeWrite
> = core.serialization.object({
    model: LlmAsJudgeModelParametersWrite,
    messages: core.serialization.list(LlmAsJudgeMessageWrite),
    variables: core.serialization.record(core.serialization.string(), core.serialization.string()),
    schema: core.serialization.list(LlmAsJudgeOutputSchemaWrite),
});

export declare namespace LlmAsJudgeCodeWrite {
    interface Raw {
        model: LlmAsJudgeModelParametersWrite.Raw;
        messages: LlmAsJudgeMessageWrite.Raw[];
        variables: Record<string, string>;
        schema: LlmAsJudgeOutputSchemaWrite.Raw[];
    }
}
