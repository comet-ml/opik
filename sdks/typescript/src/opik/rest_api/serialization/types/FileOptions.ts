/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as OpikApi from "../../api/index";
import * as core from "../../core";
import { ByteString } from "./ByteString";
import { ParserFileOptions } from "./ParserFileOptions";
import { FileOptionsOptimizeFor } from "./FileOptionsOptimizeFor";

export const FileOptions: core.serialization.ObjectSchema<serializers.FileOptions.Raw, OpikApi.FileOptions> =
    core.serialization.object({
        unknownFields: core.serialization.lazyObject(() => serializers.UnknownFieldSet).optional(),
        javaGenerateEqualsAndHash: core.serialization.boolean().optional(),
        phpMetadataNamespace: core.serialization.string().optional(),
        javaOuterClassnameBytes: ByteString.optional(),
        objcClassPrefixBytes: ByteString.optional(),
        csharpNamespaceBytes: ByteString.optional(),
        phpMetadataNamespaceBytes: ByteString.optional(),
        defaultInstanceForType: core.serialization.lazyObject(() => serializers.FileOptions).optional(),
        uninterpretedOptionCount: core.serialization.number().optional(),
        uninterpretedOptionList: core.serialization
            .list(core.serialization.lazyObject(() => serializers.UninterpretedOption))
            .optional(),
        uninterpretedOptionOrBuilderList: core.serialization
            .list(core.serialization.lazyObject(() => serializers.UninterpretedOptionOrBuilder))
            .optional(),
        javaStringCheckUtf8: core.serialization.boolean().optional(),
        featuresOrBuilder: core.serialization.lazyObject(() => serializers.FeatureSetOrBuilder).optional(),
        javaOuterClassname: core.serialization.string().optional(),
        javaMultipleFiles: core.serialization.boolean().optional(),
        ccGenericServices: core.serialization.boolean().optional(),
        javaGenericServices: core.serialization.boolean().optional(),
        pyGenericServices: core.serialization.boolean().optional(),
        ccEnableArenas: core.serialization.boolean().optional(),
        objcClassPrefix: core.serialization.string().optional(),
        csharpNamespace: core.serialization.string().optional(),
        phpClassPrefix: core.serialization.string().optional(),
        phpNamespace: core.serialization.string().optional(),
        javaPackageBytes: ByteString.optional(),
        goPackageBytes: ByteString.optional(),
        swiftPrefixBytes: ByteString.optional(),
        phpClassPrefixBytes: ByteString.optional(),
        phpNamespaceBytes: ByteString.optional(),
        rubyPackageBytes: ByteString.optional(),
        serializedSize: core.serialization.number().optional(),
        parserForType: ParserFileOptions.optional(),
        javaPackage: core.serialization.string().optional(),
        goPackage: core.serialization.string().optional(),
        swiftPrefix: core.serialization.string().optional(),
        rubyPackage: core.serialization.string().optional(),
        optimizeFor: FileOptionsOptimizeFor.optional(),
        features: core.serialization.lazyObject(() => serializers.FeatureSet).optional(),
        initialized: core.serialization.boolean().optional(),
        deprecated: core.serialization.boolean().optional(),
        initializationErrorString: core.serialization.string().optional(),
        descriptorForType: core.serialization.lazyObject(() => serializers.Descriptor).optional(),
        allFields: core.serialization
            .record(
                core.serialization.string(),
                core.serialization.record(core.serialization.string(), core.serialization.unknown()),
            )
            .optional(),
        allFieldsRaw: core.serialization
            .record(
                core.serialization.string(),
                core.serialization.record(core.serialization.string(), core.serialization.unknown()),
            )
            .optional(),
        memoizedSerializedSize: core.serialization.number().optional(),
    });

export declare namespace FileOptions {
    export interface Raw {
        unknownFields?: serializers.UnknownFieldSet.Raw | null;
        javaGenerateEqualsAndHash?: boolean | null;
        phpMetadataNamespace?: string | null;
        javaOuterClassnameBytes?: ByteString.Raw | null;
        objcClassPrefixBytes?: ByteString.Raw | null;
        csharpNamespaceBytes?: ByteString.Raw | null;
        phpMetadataNamespaceBytes?: ByteString.Raw | null;
        defaultInstanceForType?: serializers.FileOptions.Raw | null;
        uninterpretedOptionCount?: number | null;
        uninterpretedOptionList?: serializers.UninterpretedOption.Raw[] | null;
        uninterpretedOptionOrBuilderList?: serializers.UninterpretedOptionOrBuilder.Raw[] | null;
        javaStringCheckUtf8?: boolean | null;
        featuresOrBuilder?: serializers.FeatureSetOrBuilder.Raw | null;
        javaOuterClassname?: string | null;
        javaMultipleFiles?: boolean | null;
        ccGenericServices?: boolean | null;
        javaGenericServices?: boolean | null;
        pyGenericServices?: boolean | null;
        ccEnableArenas?: boolean | null;
        objcClassPrefix?: string | null;
        csharpNamespace?: string | null;
        phpClassPrefix?: string | null;
        phpNamespace?: string | null;
        javaPackageBytes?: ByteString.Raw | null;
        goPackageBytes?: ByteString.Raw | null;
        swiftPrefixBytes?: ByteString.Raw | null;
        phpClassPrefixBytes?: ByteString.Raw | null;
        phpNamespaceBytes?: ByteString.Raw | null;
        rubyPackageBytes?: ByteString.Raw | null;
        serializedSize?: number | null;
        parserForType?: ParserFileOptions.Raw | null;
        javaPackage?: string | null;
        goPackage?: string | null;
        swiftPrefix?: string | null;
        rubyPackage?: string | null;
        optimizeFor?: FileOptionsOptimizeFor.Raw | null;
        features?: serializers.FeatureSet.Raw | null;
        initialized?: boolean | null;
        deprecated?: boolean | null;
        initializationErrorString?: string | null;
        descriptorForType?: serializers.Descriptor.Raw | null;
        allFields?: Record<string, Record<string, unknown>> | null;
        allFieldsRaw?: Record<string, Record<string, unknown>> | null;
        memoizedSerializedSize?: number | null;
    }
}
