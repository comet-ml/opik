/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as OpikApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { JsonNode } from "../../../../types/JsonNode";
import { ExperimentUpdateType } from "../../types/ExperimentUpdateType";
import { ExperimentUpdateStatus } from "../../types/ExperimentUpdateStatus";

export const ExperimentUpdate: core.serialization.Schema<serializers.ExperimentUpdate.Raw, OpikApi.ExperimentUpdate> =
    core.serialization.object({
        name: core.serialization.string().optional(),
        metadata: JsonNode.optional(),
        type: ExperimentUpdateType.optional(),
        status: ExperimentUpdateStatus.optional(),
    });

export declare namespace ExperimentUpdate {
    export interface Raw {
        name?: string | null;
        metadata?: JsonNode.Raw | null;
        type?: ExperimentUpdateType.Raw | null;
        status?: ExperimentUpdateStatus.Raw | null;
    }
}
