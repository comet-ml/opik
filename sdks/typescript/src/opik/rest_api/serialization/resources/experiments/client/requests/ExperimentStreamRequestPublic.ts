/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as OpikApi from "../../../../../api/index";
import * as core from "../../../../../core";

export const ExperimentStreamRequestPublic: core.serialization.Schema<
    serializers.ExperimentStreamRequestPublic.Raw,
    OpikApi.ExperimentStreamRequestPublic
> = core.serialization.object({
    name: core.serialization.string(),
    limit: core.serialization.number().optional(),
    lastRetrievedId: core.serialization.property("last_retrieved_id", core.serialization.string().optional()),
});

export declare namespace ExperimentStreamRequestPublic {
    export interface Raw {
        name: string;
        limit?: number | null;
        last_retrieved_id?: string | null;
    }
}
