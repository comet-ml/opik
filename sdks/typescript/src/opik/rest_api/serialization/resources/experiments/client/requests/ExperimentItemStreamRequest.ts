/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as OpikApi from "../../../../../api/index";
import * as core from "../../../../../core";

export const ExperimentItemStreamRequest: core.serialization.Schema<
    serializers.ExperimentItemStreamRequest.Raw,
    OpikApi.ExperimentItemStreamRequest
> = core.serialization.object({
    experimentName: core.serialization.property("experiment_name", core.serialization.string()),
    limit: core.serialization.number().optional(),
    lastRetrievedId: core.serialization.property("last_retrieved_id", core.serialization.string().optional()),
    truncate: core.serialization.boolean().optional(),
});

export declare namespace ExperimentItemStreamRequest {
    interface Raw {
        experiment_name: string;
        limit?: number | null;
        last_retrieved_id?: string | null;
        truncate?: boolean | null;
    }
}
