/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as OpikApi from "../../../index";
export declare namespace FeedbackDefinitions {
    interface Options {
        environment?: core.Supplier<environments.OpikApiEnvironment | string>;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}
/**
 * Feedback definitions related resources
 */
export declare class FeedbackDefinitions {
    protected readonly _options: FeedbackDefinitions.Options;
    constructor(_options?: FeedbackDefinitions.Options);
    /**
     * Find Feedback definitions
     *
     * @param {OpikApi.FindFeedbackDefinitionsRequest} request
     * @param {FeedbackDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.feedbackDefinitions.findFeedbackDefinitions()
     */
    findFeedbackDefinitions(request?: OpikApi.FindFeedbackDefinitionsRequest, requestOptions?: FeedbackDefinitions.RequestOptions): core.APIPromise<OpikApi.FeedbackDefinitionPagePublic>;
    /**
     * Get feedback definition
     *
     * @param {OpikApi.FeedbackCreate} request
     * @param {FeedbackDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.feedbackDefinitions.createFeedbackDefinition({
     *         type: "categorical"
     *     })
     */
    createFeedbackDefinition(request: OpikApi.FeedbackCreate, requestOptions?: FeedbackDefinitions.RequestOptions): core.APIPromise<void>;
    /**
     * Get feedback definition by id
     *
     * @param {string} id
     * @param {FeedbackDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.feedbackDefinitions.getFeedbackDefinitionById("id")
     */
    getFeedbackDefinitionById(id: string, requestOptions?: FeedbackDefinitions.RequestOptions): core.APIPromise<OpikApi.FeedbackPublic>;
    /**
     * Update feedback definition by id
     *
     * @param {string} id
     * @param {OpikApi.FeedbackUpdate} request
     * @param {FeedbackDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.feedbackDefinitions.updateFeedbackDefinition("id", {
     *         type: "categorical"
     *     })
     */
    updateFeedbackDefinition(id: string, request: OpikApi.FeedbackUpdate, requestOptions?: FeedbackDefinitions.RequestOptions): core.APIPromise<void>;
    /**
     * Delete feedback definition by id
     *
     * @param {string} id
     * @param {FeedbackDefinitions.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.feedbackDefinitions.deleteFeedbackDefinitionById("id")
     */
    deleteFeedbackDefinitionById(id: string, requestOptions?: FeedbackDefinitions.RequestOptions): core.APIPromise<void>;
}
