/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as OpikApi from "../index";

export interface DescriptorProtoOrBuilder {
    name?: string;
    extensionOrBuilderList?: OpikApi.FieldDescriptorProtoOrBuilder[];
    enumTypeOrBuilderList?: OpikApi.EnumDescriptorProtoOrBuilder[];
    extensionRangeOrBuilderList?: OpikApi.ExtensionRangeOrBuilder[];
    oneofDeclOrBuilderList?: OpikApi.OneofDescriptorProtoOrBuilder[];
    reservedRangeOrBuilderList?: OpikApi.ReservedRangeOrBuilder[];
    extensionList?: OpikApi.FieldDescriptorProto[];
    nestedTypeList?: OpikApi.DescriptorProto[];
    enumTypeList?: OpikApi.EnumDescriptorProto[];
    oneofDeclList?: OpikApi.OneofDescriptorProto[];
    reservedRangeCount?: number;
    reservedNameCount?: number;
    fieldOrBuilderList?: OpikApi.FieldDescriptorProtoOrBuilder[];
    optionsOrBuilder?: OpikApi.MessageOptionsOrBuilder;
    reservedRangeList?: OpikApi.ReservedRange[];
    reservedNameList?: string[];
    extensionRangeList?: OpikApi.ExtensionRange[];
    oneofDeclCount?: number;
    nestedTypeCount?: number;
    enumTypeCount?: number;
    extensionCount?: number;
    extensionRangeCount?: number;
    fieldList?: OpikApi.FieldDescriptorProto[];
    nameBytes?: OpikApi.ByteString;
    fieldCount?: number;
    options?: OpikApi.MessageOptions;
    defaultInstanceForType?: OpikApi.Message;
    initializationErrorString?: string;
    unknownFields?: OpikApi.UnknownFieldSet;
    descriptorForType?: OpikApi.Descriptor;
    allFields?: Record<string, Record<string, unknown>>;
    initialized?: boolean;
}
