# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .annotation_queue_write_scope import AnnotationQueueWriteScope


class AnnotationQueueWrite(UniversalBaseModel):
    """
    List of annotation queues to create
    """

    id: typing.Optional[str] = None
    project_id: str
    name: str
    description: typing.Optional[str] = None
    instructions: typing.Optional[str] = None
    scope: AnnotationQueueWriteScope
    comments_enabled: typing.Optional[bool] = None
    feedback_definition_names: typing.Optional[typing.List[str]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
