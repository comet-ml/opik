# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .annotation_queue_public_scope import AnnotationQueuePublicScope
from .annotation_queue_reviewer_public import AnnotationQueueReviewerPublic
from .feedback_score_average_public import FeedbackScoreAveragePublic


class AnnotationQueuePublic(UniversalBaseModel):
    id: typing.Optional[str] = None
    project_id: str
    project_name: typing.Optional[str] = None
    name: str
    description: typing.Optional[str] = None
    instructions: typing.Optional[str] = None
    scope: AnnotationQueuePublicScope
    comments_enabled: typing.Optional[bool] = None
    feedback_definition_names: typing.Optional[typing.List[str]] = None
    reviewers: typing.Optional[typing.List[AnnotationQueueReviewerPublic]] = None
    feedback_scores: typing.Optional[typing.List[FeedbackScoreAveragePublic]] = None
    items_count: typing.Optional[int] = None
    created_at: typing.Optional[dt.datetime] = None
    created_by: typing.Optional[str] = None
    last_updated_at: typing.Optional[dt.datetime] = None
    last_updated_by: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
