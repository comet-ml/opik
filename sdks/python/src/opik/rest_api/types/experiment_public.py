# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .comment_public import CommentPublic
from .experiment_public_type import ExperimentPublicType
from .feedback_score_average_public import FeedbackScoreAveragePublic
from .json_node_public import JsonNodePublic
from .percentage_values_public import PercentageValuesPublic
from .prompt_version_link_public import PromptVersionLinkPublic


class ExperimentPublic(UniversalBaseModel):
    id: typing.Optional[str] = None
    dataset_name: str
    dataset_id: typing.Optional[str] = None
    name: typing.Optional[str] = None
    metadata: typing.Optional[JsonNodePublic] = None
    type: typing.Optional[ExperimentPublicType] = None
    optimization_id: typing.Optional[str] = None
    feedback_scores: typing.Optional[typing.List[FeedbackScoreAveragePublic]] = None
    comments: typing.Optional[typing.List[CommentPublic]] = None
    trace_count: typing.Optional[int] = None
    created_at: typing.Optional[dt.datetime] = None
    duration: typing.Optional[PercentageValuesPublic] = None
    total_estimated_cost: typing.Optional[float] = None
    usage: typing.Optional[typing.Dict[str, float]] = None
    last_updated_at: typing.Optional[dt.datetime] = None
    created_by: typing.Optional[str] = None
    last_updated_by: typing.Optional[str] = None
    prompt_version: typing.Optional[PromptVersionLinkPublic] = None
    prompt_versions: typing.Optional[typing.List[PromptVersionLinkPublic]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
