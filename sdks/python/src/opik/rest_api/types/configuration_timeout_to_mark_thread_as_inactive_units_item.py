# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .configuration_timeout_to_mark_thread_as_inactive_units_item_duration import (
    ConfigurationTimeoutToMarkThreadAsInactiveUnitsItemDuration,
)


class ConfigurationTimeoutToMarkThreadAsInactiveUnitsItem(UniversalBaseModel):
    duration_estimated: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="durationEstimated")] = (
        None
    )
    duration: typing.Optional[ConfigurationTimeoutToMarkThreadAsInactiveUnitsItemDuration] = None
    time_based: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="timeBased")] = None
    date_based: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="dateBased")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
