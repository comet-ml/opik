# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .feedback_score_average import FeedbackScoreAverage
from .percentage_values import PercentageValues


class AggregationData(UniversalBaseModel):
    experiment_count: typing.Optional[int] = None
    trace_count: typing.Optional[int] = None
    total_estimated_cost: typing.Optional[float] = None
    total_estimated_cost_avg: typing.Optional[float] = None
    duration: typing.Optional[PercentageValues] = None
    feedback_scores: typing.Optional[typing.List[FeedbackScoreAverage]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
