# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .manual_evaluation_request_entity_type import ManualEvaluationRequestEntityType


class ManualEvaluationRequest(UniversalBaseModel):
    project_id: str = pydantic.Field()
    """
    Project ID
    """

    entity_ids: typing.List[str] = pydantic.Field()
    """
    List of entity IDs (trace IDs or thread IDs) to evaluate
    """

    rule_ids: typing.List[str] = pydantic.Field()
    """
    List of automation rule IDs to apply
    """

    entity_type: ManualEvaluationRequestEntityType = pydantic.Field()
    """
    Type of entity to evaluate (trace or thread)
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
