# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ..core.pydantic_utilities import UniversalBaseModel
from .unknown_field_set import UnknownFieldSet
from .any_value import AnyValue
from .any_value_or_builder import AnyValueOrBuilder
from .array_value import ArrayValue
from .array_value_or_builder import ArrayValueOrBuilder
from .declaration import Declaration
from .declaration_or_builder import DeclarationOrBuilder
from .descriptor import Descriptor
from .descriptor_proto import DescriptorProto
from .descriptor_proto_or_builder import DescriptorProtoOrBuilder
from .edition_default import EditionDefault
from .edition_default_or_builder import EditionDefaultOrBuilder
from .enum_descriptor import EnumDescriptor
from .enum_descriptor_proto import EnumDescriptorProto
from .enum_descriptor_proto_or_builder import EnumDescriptorProtoOrBuilder
from .enum_options import EnumOptions
from .enum_options_or_builder import EnumOptionsOrBuilder
from .enum_reserved_range import EnumReservedRange
from .enum_reserved_range_or_builder import EnumReservedRangeOrBuilder
from .enum_value_descriptor import EnumValueDescriptor
from .enum_value_descriptor_proto import EnumValueDescriptorProto
from .enum_value_descriptor_proto_or_builder import EnumValueDescriptorProtoOrBuilder
from .enum_value_options import EnumValueOptions
from .enum_value_options_or_builder import EnumValueOptionsOrBuilder
from .event import Event
from .extension_range import ExtensionRange
from .extension_range_options import ExtensionRangeOptions
from .extension_range_options_or_builder import ExtensionRangeOptionsOrBuilder
from .extension_range_or_builder import ExtensionRangeOrBuilder
from .feature_set import FeatureSet
from .feature_set_or_builder import FeatureSetOrBuilder
from .feature_support import FeatureSupport
from .feature_support_or_builder import FeatureSupportOrBuilder
from .field_descriptor import FieldDescriptor
from .field_descriptor_proto import FieldDescriptorProto
from .field_descriptor_proto_or_builder import FieldDescriptorProtoOrBuilder
from .field_options import FieldOptions
from .field_options_or_builder import FieldOptionsOrBuilder
from .file_descriptor import FileDescriptor
from .file_descriptor_proto import FileDescriptorProto
from .file_options import FileOptions
from .file_options_or_builder import FileOptionsOrBuilder
from .instrumentation_scope import InstrumentationScope
from .key_value import KeyValue
from .key_value_list import KeyValueList
from .key_value_list_or_builder import KeyValueListOrBuilder
from .link import Link
from .location import Location
from .location_or_builder import LocationOrBuilder
from .message import Message
from .message_lite import MessageLite
from .message_options import MessageOptions
from .message_options_or_builder import MessageOptionsOrBuilder
from .method_descriptor import MethodDescriptor
from .method_descriptor_proto import MethodDescriptorProto
from .method_descriptor_proto_or_builder import MethodDescriptorProtoOrBuilder
from .method_options import MethodOptions
from .method_options_or_builder import MethodOptionsOrBuilder
from .name_part import NamePart
from .name_part_or_builder import NamePartOrBuilder
from .oneof_descriptor import OneofDescriptor
from .oneof_descriptor_proto import OneofDescriptorProto
from .oneof_descriptor_proto_or_builder import OneofDescriptorProtoOrBuilder
from .oneof_options import OneofOptions
from .oneof_options_or_builder import OneofOptionsOrBuilder
from .reserved_range import ReservedRange
from .reserved_range_or_builder import ReservedRangeOrBuilder
from .resource import Resource
from .resource_spans import ResourceSpans
from .scope_spans import ScopeSpans
from .service_descriptor import ServiceDescriptor
from .service_descriptor_proto import ServiceDescriptorProto
from .service_descriptor_proto_or_builder import ServiceDescriptorProtoOrBuilder
from .service_options import ServiceOptions
from .service_options_or_builder import ServiceOptionsOrBuilder
from .source_code_info import SourceCodeInfo
from .source_code_info_or_builder import SourceCodeInfoOrBuilder
from .status import Status
from .uninterpreted_option import UninterpretedOption
from .uninterpreted_option_or_builder import UninterpretedOptionOrBuilder
import typing_extensions
import typing
from ..core.serialization import FieldMetadata
from .resource_spans_or_builder import ResourceSpansOrBuilder
from .parser_export_trace_service_request import ParserExportTraceServiceRequest
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic
from ..core.pydantic_utilities import update_forward_refs


class ExportTraceServiceRequest(UniversalBaseModel):
    unknown_fields: typing_extensions.Annotated[
        typing.Optional[UnknownFieldSet], FieldMetadata(alias="unknownFields")
    ] = None
    default_instance_for_type: typing_extensions.Annotated[
        typing.Optional["ExportTraceServiceRequest"],
        FieldMetadata(alias="defaultInstanceForType"),
    ] = None
    resource_spans_or_builder_list: typing_extensions.Annotated[
        typing.Optional[typing.List[ResourceSpansOrBuilder]],
        FieldMetadata(alias="resourceSpansOrBuilderList"),
    ] = None
    serialized_size: typing_extensions.Annotated[
        typing.Optional[int], FieldMetadata(alias="serializedSize")
    ] = None
    resource_spans_list: typing_extensions.Annotated[
        typing.Optional[typing.List[ResourceSpans]],
        FieldMetadata(alias="resourceSpansList"),
    ] = None
    resource_spans_count: typing_extensions.Annotated[
        typing.Optional[int], FieldMetadata(alias="resourceSpansCount")
    ] = None
    parser_for_type: typing_extensions.Annotated[
        typing.Optional[ParserExportTraceServiceRequest],
        FieldMetadata(alias="parserForType"),
    ] = None
    initialized: typing.Optional[bool] = None
    initialization_error_string: typing_extensions.Annotated[
        typing.Optional[str], FieldMetadata(alias="initializationErrorString")
    ] = None
    descriptor_for_type: typing_extensions.Annotated[
        typing.Optional[Descriptor], FieldMetadata(alias="descriptorForType")
    ] = None
    all_fields: typing_extensions.Annotated[
        typing.Optional[
            typing.Dict[str, typing.Dict[str, typing.Optional[typing.Any]]]
        ],
        FieldMetadata(alias="allFields"),
    ] = None
    memoized_serialized_size: typing_extensions.Annotated[
        typing.Optional[int], FieldMetadata(alias="memoizedSerializedSize")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


update_forward_refs(
    UnknownFieldSet, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(AnyValue, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(
    AnyValueOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(ArrayValue, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(
    ArrayValueOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(Declaration, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(
    DeclarationOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(Descriptor, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(
    DescriptorProto, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(
    DescriptorProtoOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(EditionDefault, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(
    EditionDefaultOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(EnumDescriptor, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(
    EnumDescriptorProto, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(
    EnumDescriptorProtoOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(EnumOptions, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(
    EnumOptionsOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(
    EnumReservedRange, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(
    EnumReservedRangeOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(
    EnumValueDescriptor, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(
    EnumValueDescriptorProto, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(
    EnumValueDescriptorProtoOrBuilder,
    ExportTraceServiceRequest=ExportTraceServiceRequest,
)
update_forward_refs(
    EnumValueOptions, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(
    EnumValueOptionsOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(Event, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(ExtensionRange, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(
    ExtensionRangeOptions, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(
    ExtensionRangeOptionsOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(
    ExtensionRangeOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(FeatureSet, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(
    FeatureSetOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(FeatureSupport, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(
    FeatureSupportOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(
    FieldDescriptor, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(
    FieldDescriptorProto, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(
    FieldDescriptorProtoOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(FieldOptions, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(
    FieldOptionsOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(FileDescriptor, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(
    FileDescriptorProto, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(FileOptions, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(
    FileOptionsOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(
    InstrumentationScope, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(KeyValue, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(KeyValueList, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(
    KeyValueListOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(Link, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(Location, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(
    LocationOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(Message, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(MessageLite, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(MessageOptions, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(
    MessageOptionsOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(
    MethodDescriptor, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(
    MethodDescriptorProto, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(
    MethodDescriptorProtoOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(MethodOptions, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(
    MethodOptionsOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(NamePart, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(
    NamePartOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(
    OneofDescriptor, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(
    OneofDescriptorProto, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(
    OneofDescriptorProtoOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(OneofOptions, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(
    OneofOptionsOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(ReservedRange, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(
    ReservedRangeOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(Resource, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(ResourceSpans, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(ScopeSpans, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(
    ServiceDescriptor, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(
    ServiceDescriptorProto, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(
    ServiceDescriptorProtoOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(ServiceOptions, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(
    ServiceOptionsOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(SourceCodeInfo, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(
    SourceCodeInfoOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(Status, ExportTraceServiceRequest=ExportTraceServiceRequest)
update_forward_refs(
    UninterpretedOption, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(
    UninterpretedOptionOrBuilder, ExportTraceServiceRequest=ExportTraceServiceRequest
)
update_forward_refs(ExportTraceServiceRequest)
