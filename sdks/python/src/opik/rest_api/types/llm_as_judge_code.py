# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .llm_as_judge_message import LlmAsJudgeMessage
from .llm_as_judge_model_parameters import LlmAsJudgeModelParameters
from .llm_as_judge_output_schema import LlmAsJudgeOutputSchema


class LlmAsJudgeCode(UniversalBaseModel):
    model: LlmAsJudgeModelParameters
    messages: typing.List[LlmAsJudgeMessage]
    variables: typing.Dict[str, str]
    schema_: typing_extensions.Annotated[typing.List[LlmAsJudgeOutputSchema], FieldMetadata(alias="schema")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
