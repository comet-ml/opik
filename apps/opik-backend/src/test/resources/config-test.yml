---
# https://www.dropwizard.io/en/stable/manual/configuration.html#logging
logging:
  #  Default: INFO
  #  Description: Logback logging level
  level: INFO
  #  Default: com.comet: DEBUG
  #  Description: Individual logger configuration
  loggers:
    com.comet: DEBUG

# Description: state database configuration
# https://www.dropwizard.io/en/stable/manual/configuration.html#database
database:
  #  Default: jdbc:mysql://localhost:3306/opik?createDatabaseIfNotExist=true&rewriteBatchedStatements=true
  #  Description: The URL of the server
  url: jdbc:mysql://localhost:3306/opik?createDatabaseIfNotExist=true&rewriteBatchedStatements=true
  #  Default: opik
  #  Description: The username used to connect to the server
  user: opik
  #  Default: opik
  #  Description: The password used to connect to the server
  password: opik
  #  Default: com.mysql.cj.jdbc.Driver
  #  Description: The fully qualified class name of the JDBC driver class. Only required if there were no JDBC drivers registered in META-INF/services/java.sql.Driver.
  driverClass: com.mysql.cj.jdbc.Driver

# Description: analytics database configuration for migrations connection
databaseAnalyticsMigrations:
  #  Default: jdbc:clickhouse://localhost:8123/opik
  #  Description: The URL of the server
  url: jdbc:clickhouse://localhost:8123/opik
  #  Default: opik
  #  Description: The username used to connect to the server
  user: opik
  #  Default: opik
  #  Description: The password used to connect to the server
  password: opik
  #  Default: ru.yandex.clickhouse.ClickHouseDriver
  #  Description: The fully qualified class name of the JDBC driver class.
  #   Community support only. Requires an old driver for migrations to work
  driverClass: ru.yandex.clickhouse.ClickHouseDriver

# Description: analytics database configuration for service connection
databaseAnalytics:
  #  Default: http
  #  Description: The protocol used to connect to the server
  protocol: HTTP
  #  Default: localhost
  #  Description: The host used to connect to the server
  host: localhost
  #  Default: 8123
  #  Description: The port used to connect to the server
  port: 8123
  #  Default: opik
  #  Description: The username used to connect to the server
  username: opik
  #  Default: opik
  #  Description: The password used to connect to the server
  password: opik
  #  Default: opik
  #  Description: The database name
  databaseName: opik
  #  Default:
  #   - health_check_interval=2000
  #   - compress=1
  #   - auto_discovery=true
  #   - failover=3
  #   - custom_http_params=max_query_size=100000000
  #  Description: query parameters that will be added to the connection string
  queryParameters: health_check_interval=2000&compress=1&auto_discovery=true&failover=3&custom_http_params=max_query_size=100000000

health:
  healthCheckUrlPaths: [ "/health-check" ]
  healthChecks:
    - name: deadlocks
      critical: true
      type: alive
    - name: db
      critical: true
      type: ready
    - name: redis
      critical: true
      type: ready
    - name: clickhouse
      critical: true
      type: ready
    - name: mysql
      critical: true
      type: ready

distributedLock:
  lockTimeout: 500
  ttlInSeconds: 1

redis:
  singleNodeUrl:

authentication:
  enabled: ${AUTH_ENABLED:-false}
  apiKeyResolutionCacheTTLInSec: ${AUTH_API_KEY_RESOLUTION_CACHE_TTL_IN_SEC:-0} #0 means no cache
  sdk:
    url: ${AUTH_SDK_URL:-''}
  ui:
    url: ${AUTH_UI_URL:-''}

server:
  enableVirtualThreads: false
  gzip:
    enabled: true

batchOperations:
  datasets:
    maxExperimentInClauseSize: 100

rateLimit:
  enabled: false

usageReport:
  enabled: false

metadata:
  version: ${OPIK_VERSION:-latest}

cors:
  enabled: ${CORS:-false}

encryption:
  key: ${OPIK_ENCRYPTION_KEY:-'GiTHubiLoVeYouAA'}

llmProviderClient:
  openApiClient:
    # See demo endpoint Langchain4j documentation: https://docs.langchain4j.dev/get-started
    # Not https but only used for testing purposes. It's fine as long as not sensitive data is sent.
    url: http://langchain4j.dev/demo/openai/v1
