# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .json_node import JsonNode
from .feedback_score_average import FeedbackScoreAverage
from .comment import Comment
import datetime as dt
from .prompt_version_link import PromptVersionLink
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class Experiment(UniversalBaseModel):
    id: typing.Optional[str] = None
    dataset_name: str
    dataset_id: typing.Optional[str] = None
    name: typing.Optional[str] = None
    metadata: typing.Optional[JsonNode] = None
    feedback_scores: typing.Optional[typing.List[FeedbackScoreAverage]] = None
    comments: typing.Optional[typing.List[Comment]] = None
    trace_count: typing.Optional[int] = None
    created_at: typing.Optional[dt.datetime] = None
    last_updated_at: typing.Optional[dt.datetime] = None
    created_by: typing.Optional[str] = None
    last_updated_by: typing.Optional[str] = None
    prompt_version: typing.Optional[PromptVersionLink] = None
    prompt_versions: typing.Optional[typing.List[PromptVersionLink]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
