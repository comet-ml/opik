openapi: 3.1.0
info:
  description: |
    The Opik REST API is currently in beta and subject to change. If you have any questions or feedback about the APIs, please reach out on GitHub: https://github.com/comet-ml/opik.

    All of the methods listed in this documentation are used by either the SDK or the UI to interact with the Opik server. As a result,
    the methods have been optimized for these use-cases in mind. If you are looking for a method that is not listed above, please create
    and issue on GitHub or raise a PR!

    Opik includes two main deployment options that results in slightly different API usage:

    - **Self-hosted Opik instance:** You will simply need to specify the URL as `http://localhost:5173/api/<endpoint_path>` or similar. This is the default option for the docs.
    - **Opik Cloud:** You will need to specify the Opik API Key and Opik Workspace in the header. The format of the header should be:

      ```
      {
        "Comet-Workspace": "your-workspace-name",
        "authorization": "your-api-key"
      }
      ```

      Do take note here that the authorization header value does not include the `Bearer ` prefix. To switch to using the Opik Cloud in the documentation, you can
      click on the edit button displayed when hovering over the `Base URL` displayed on the right hand side of the docs.

  version: "1.0.0"
  title: "Opik REST API"
  contact:
    name: "Github Repository"
    url: "https://github.com/comet-ml/opik"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

servers:
  - url: http://localhost:5173/api
    description: Local server
  - url: https://www.comet.com/opik/api
    description: Opik Cloud

tags:
  - name: Datasets
    description: Dataset resources
  - name: Experiments
    description: Experiment resources
  - name: Feedback-definitions
    description: Feedback definitions related resources
  - name: Projects
    description: Project related resources
  - name: Spans
    description: Span related resources
  - name: Traces
    description: Trace related resources
paths:
  /v1/private/datasets:
    get:
      tags:
        - Datasets
      summary: Find datasets
      description: Find datasets
      operationId: findDatasets
      parameters:
        - name: page
          in: query
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 10
        - name: name
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Dataset resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetPage_Public"
    post:
      tags:
        - Datasets
      summary: Create dataset
      description: Create dataset
      operationId: createDataset
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Dataset_Write"
      responses:
        "201":
          description: Created
          headers:
            Location:
              required: true
              style: simple
              schema:
                type: string
              example: "${basePath}/api/v1/private/datasets/{id}"
  /v1/private/datasets/items:
    put:
      tags:
        - Datasets
      summary: Create/update dataset items
      description: Create/update dataset items based on dataset item id
      operationId: createOrUpdateDatasetItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetItemBatch_Write"
      responses:
        "204":
          description: No content
  /v1/private/datasets/{id}:
    get:
      tags:
        - Datasets
      summary: Get dataset by id
      description: Get dataset by id
      operationId: getDatasetById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Dataset resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dataset_Public"
    put:
      tags:
        - Datasets
      summary: Update dataset by id
      description: Update dataset by id
      operationId: updateDataset
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetUpdate"
      responses:
        "204":
          description: No content
    delete:
      tags:
        - Datasets
      summary: Delete dataset by id
      description: Delete dataset by id
      operationId: deleteDataset
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: No content
  /v1/private/datasets/delete:
    post:
      tags:
        - Datasets
      summary: Delete dataset by name
      description: Delete dataset by name
      operationId: deleteDatasetByName
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetIdentifier"
      responses:
        "204":
          description: No content
  /v1/private/datasets/items/delete:
    post:
      tags:
        - Datasets
      summary: Delete dataset items
      description: Delete dataset items
      operationId: deleteDatasetItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetItemsDelete"
      responses:
        "204":
          description: No content
  /v1/private/datasets/{id}/items/experiments/items:
    get:
      tags:
        - Datasets
      summary: Find dataset items with experiment items
      description: Find dataset items with experiment items
      operationId: findDatasetItemsWithExperimentItems
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 10
        - name: experiment_ids
          in: query
          required: true
          schema:
            type: string
        - name: filters
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Dataset item resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetItemPage_Compare"
  /v1/private/datasets/retrieve:
    post:
      tags:
        - Datasets
      summary: Get dataset by name
      description: Get dataset by name
      operationId: getDatasetByIdentifier
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetIdentifier_Public"
      responses:
        "200":
          description: Dataset resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dataset_Public"
  /v1/private/datasets/items/{itemId}:
    get:
      tags:
        - Datasets
      summary: Get dataset item by id
      description: Get dataset item by id
      operationId: getDatasetItemById
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Dataset item resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetItem_Public"
  /v1/private/datasets/{id}/items:
    get:
      tags:
        - Datasets
      summary: Get dataset items
      description: Get dataset items
      operationId: getDatasetItems
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          description: Dataset items resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetItemPage_Public"
  /v1/private/datasets/items/stream:
    post:
      tags:
        - Datasets
      summary: Stream dataset items
      description: Stream dataset items
      operationId: streamDatasetItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetItemStreamRequest"
      responses:
        "200":
          description: Dataset items stream or error during process
          content:
            application/octet-stream:
              schema:
                maxItems: 1000
                type: array
                items:
                  type: string
                  anyOf:
                    - $ref: "#/components/schemas/DatasetItem"
                    - $ref: "#/components/schemas/ErrorMessage"
  /v1/private/experiments:
    get:
      tags:
        - Experiments
      summary: Find experiments
      description: Find experiments
      operationId: findExperiments
      parameters:
        - name: page
          in: query
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 10
        - name: datasetId
          in: query
          schema:
            type: string
            format: uuid
        - name: name
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Experiments resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExperimentPage_Public"
    post:
      tags:
        - Experiments
      summary: Create experiment
      description: Create experiment
      operationId: createExperiment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Experiment_Write"
      responses:
        "201":
          description: Created
          headers:
            Location:
              required: true
              style: simple
              schema:
                type: string
              example: "${basePath}/v1/private/experiments/{id}"
  /v1/private/experiments/items:
    post:
      tags:
        - Experiments
      summary: Create experiment items
      description: Create experiment items
      operationId: createExperimentItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExperimentItemsBatch"
      responses:
        "204":
          description: No content
  /v1/private/experiments/items/delete:
    post:
      tags:
        - Experiments
      summary: Delete experiment items
      description: Delete experiment items
      operationId: deleteExperimentItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExperimentItemsDelete"
      responses:
        "204":
          description: No content
  /v1/private/experiments/{id}:
    get:
      tags:
        - Experiments
      summary: Get experiment by id
      description: Get experiment by id
      operationId: getExperimentById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Experiment resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Experiment_Public"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage_Public"
  /v1/private/experiments/items/{id}:
    get:
      tags:
        - Experiments
      summary: Get experiment item by id
      description: Get experiment item by id
      operationId: getExperimentItemById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Experiment item resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExperimentItem_Public"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage_Public"
  /v1/private/feedback-definitions:
    get:
      tags:
        - Feedback-definitions
      summary: Find Feedback definitions
      description: Find Feedback definitions
      operationId: findFeedbackDefinitions
      parameters:
        - name: page
          in: query
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 10
        - name: name
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
            enum:
              - numerical
              - categorical
      responses:
        "200":
          description: Feedback definitions resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedbackDefinitionPage_Public"
    post:
      tags:
        - Feedback-definitions
      summary: Create feedback definition
      description: Get feedback definition
      operationId: createFeedbackDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Feedback_Create"
      responses:
        "201":
          description: Created
          headers:
            Location:
              required: true
              style: simple
              schema:
                type: string
              example: "${basePath}/v1/private/feedback-definitions/{feedbackId}"
  /v1/private/feedback-definitions/{id}:
    get:
      tags:
        - Feedback-definitions
      summary: Get feedback definition by id
      description: Get feedback definition by id
      operationId: getFeedbackDefinitionById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Feedback definition resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feedback_Public"
    put:
      tags:
        - Feedback-definitions
      summary: Update feedback definition by id
      description: Update feedback definition by id
      operationId: updateFeedbackDefinition
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Feedback_Update"
      responses:
        "204":
          description: No Content
    delete:
      tags:
        - Feedback-definitions
      summary: Delete feedback definition by id
      description: Delete feedback definition by id
      operationId: deleteFeedbackDefinitionById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: No Content
  /v1/private/projects:
    get:
      tags:
        - Projects
      summary: Find projects
      description: Find projects
      operationId: findProjects
      parameters:
        - name: page
          in: query
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 10
        - name: name
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Project resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectPage_Public"
    post:
      tags:
        - Projects
      summary: Create project
      description: Get project
      operationId: createProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project_Write"
      responses:
        "201":
          description: Created
          headers:
            Location:
              required: true
              style: simple
              schema:
                type: string
              example: "${basePath}/v1/private/projects/{projectId}"
        "422":
          description: Unprocessable Content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /v1/private/projects/{id}:
    get:
      tags:
        - Projects
      summary: Get project by id
      description: Get project by id
      operationId: getProjectById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Project resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project_Public"
    delete:
      tags:
        - Projects
      summary: Delete project by id
      description: Delete project by id
      operationId: deleteProjectById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: No Content
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
    patch:
      tags:
        - Projects
      summary: Update project by id
      description: Update project by id
      operationId: updateProject
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectUpdate"
      responses:
        "204":
          description: No Content
        "422":
          description: Unprocessable Content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
  /v1/private/spans/{id}/feedback-scores:
    put:
      tags:
        - Spans
      summary: Add span feedback score
      description: Add span feedback score
      operationId: addSpanFeedbackScore
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeedbackScore"
      responses:
        "204":
          description: No Content
  /v1/private/spans:
    get:
      tags:
        - Spans
      summary: Get spans by project_name or project_id and optionally by trace_id
        and/or type
      description: Get spans by project_name or project_id and optionally by trace_id
        and/or type
      operationId: getSpansByProject
      parameters:
        - name: page
          in: query
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 10
        - name: project_name
          in: query
          schema:
            type: string
        - name: project_id
          in: query
          schema:
            type: string
            format: uuid
        - name: trace_id
          in: query
          schema:
            type: string
            format: uuid
        - name: type
          in: query
          schema:
            type: string
            enum:
              - general
              - tool
              - llm
        - name: filters
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Spans resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpanPage_Public"
    post:
      tags:
        - Spans
      summary: Create span
      description: Create span
      operationId: createSpan
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Span_Write"
      responses:
        "201":
          description: Created
          headers:
            Location:
              required: true
              style: simple
              schema:
                type: string
              example: "${basePath}/v1/private/spans/{spanId}"
  /v1/private/spans/batch:
    post:
      tags:
        - Spans
      summary: Create spans
      description: Create spans
      operationId: createSpans
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpanBatch_Write"
      responses:
        "204":
          description: No Content
  /v1/private/spans/{id}:
    get:
      tags:
        - Spans
      summary: Get span by id
      description: Get span by id
      operationId: getSpanById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Span resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Span_Public"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Span_Public"
    delete:
      tags:
        - Spans
      summary: Delete span by id
      description: Delete span by id
      operationId: deleteSpanById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "501":
          description: Not implemented
        "204":
          description: No Content
    patch:
      tags:
        - Spans
      summary: Update span by id
      description: Update span by id
      operationId: updateSpan
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpanUpdate"
      responses:
        "204":
          description: No Content
        "404":
          description: Not found
  /v1/private/spans/{id}/feedback-scores/delete:
    post:
      tags:
        - Spans
      summary: Delete span feedback score
      description: Delete span feedback score
      operationId: deleteSpanFeedbackScore
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteFeedbackScore"
      responses:
        "204":
          description: No Content
  /v1/private/spans/feedback-scores:
    put:
      tags:
        - Spans
      summary: Batch feedback scoring for spans
      description: Batch feedback scoring for spans
      operationId: scoreBatchOfSpans
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeedbackScoreBatch"
      responses:
        "204":
          description: No Content
  /v1/private/traces/{id}/feedback-scores:
    put:
      tags:
        - Traces
      summary: Add trace feedback score
      description: Add trace feedback score
      operationId: addTraceFeedbackScore
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeedbackScore"
      responses:
        "204":
          description: No Content
  /v1/private/traces:
    get:
      tags:
        - Traces
      summary: Get traces by project_name or project_id
      description: Get traces by project_name or project_id
      operationId: getTracesByProject
      parameters:
        - name: page
          in: query
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 10
        - name: project_name
          in: query
          schema:
            type: string
        - name: project_id
          in: query
          schema:
            type: string
            format: uuid
        - name: filters
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Trace resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TracePage_Public"
    post:
      tags:
        - Traces
      summary: Create trace
      description: Get trace
      operationId: createTrace
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Trace_Write"
      responses:
        "201":
          description: Created
          headers:
            Location:
              required: true
              style: simple
              schema:
                type: string
              example: "${basePath}/v1/private/traces/{traceId}"
  /v1/private/traces/batch:
    post:
      tags:
        - Traces
      summary: Create traces
      description: Create traces
      operationId: createTraces
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceBatch_Write"
      responses:
        "204":
          description: No Content
  /v1/private/traces/{id}:
    get:
      tags:
        - Traces
      summary: Get trace by id
      description: Get trace by id
      operationId: getTraceById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Trace resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trace_Public"
    delete:
      tags:
        - Traces
      summary: Delete trace by id
      description: Delete trace by id
      operationId: deleteTraceById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: No Content
    patch:
      tags:
        - Traces
      summary: Update trace by id
      description: Update trace by id
      operationId: updateTrace
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceUpdate"
      responses:
        "204":
          description: No Content
  /v1/private/traces/{id}/feedback-scores/delete:
    post:
      tags:
        - Traces
      summary: Delete trace feedback score
      description: Delete trace feedback score
      operationId: deleteTraceFeedbackScore
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteFeedbackScore"
      responses:
        "204":
          description: No Content
  /v1/private/traces/feedback-scores:
    put:
      tags:
        - Traces
      summary: Batch feedback scoring for traces
      description: Batch feedback scoring for traces
      operationId: scoreBatchOfTraces
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeedbackScoreBatch"
      responses:
        "204":
          description: No Content
  /is-alive/ping:
    get:
      operationId: isAlive
      responses:
        default:
          description: default response
          content:
            application/json: {}
components:
  schemas:
    Dataset:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          pattern: ^(?!\s*$).+
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        last_updated_at:
          type: string
          format: date-time
          readOnly: true
        last_updated_by:
          type: string
          readOnly: true
        experiment_count:
          type: integer
          format: int64
          readOnly: true
        most_recent_experiment_at:
          type: string
          format: date-time
          readOnly: true
    Dataset_Write:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          pattern: ^(?!\s*$).+
          type: string
    DatasetItem:
      required:
        - input
        - source
      type: object
      properties:
        id:
          type: string
          format: uuid
        input:
          $ref: "#/components/schemas/JsonNode"
        expected_output:
          $ref: "#/components/schemas/JsonNode"
        metadata:
          $ref: "#/components/schemas/JsonNode"
        trace_id:
          type: string
          format: uuid
        span_id:
          type: string
          format: uuid
        source:
          type: string
          enum:
            - manual
            - trace
            - span
            - sdk
        experiment_items:
          type: array
          readOnly: true
          items:
            $ref: "#/components/schemas/ExperimentItem"
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        last_updated_by:
          type: string
          readOnly: true
    DatasetItemBatch:
      required:
        - items
      type: object
      properties:
        dataset_name:
          pattern: ^(?!\s*$).+
          type: string
          description: "If null, dataset_id must be provided"
        dataset_id:
          type: string
          description: "If null, dataset_name must be provided"
          format: uuid
        items:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/DatasetItem"
    ExperimentItem:
      required:
        - dataset_item_id
        - experiment_id
        - trace_id
      type: object
      properties:
        id:
          type: string
          format: uuid
        experiment_id:
          type: string
          format: uuid
        dataset_item_id:
          type: string
          format: uuid
        trace_id:
          type: string
          format: uuid
        input:
          $ref: "#/components/schemas/JsonNode"
        output:
          $ref: "#/components/schemas/JsonNode"
        feedback_scores:
          type: array
          readOnly: true
          items:
            $ref: "#/components/schemas/FeedbackScore"
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        last_updated_by:
          type: string
          readOnly: true
    FeedbackScore:
      required:
        - name
        - source
        - value
      type: object
      properties:
        name:
          type: string
        category_name:
          type: string
        value:
          maximum: 999999999.999999999
          exclusiveMaximum: false
          minimum: -999999999.999999999
          exclusiveMinimum: false
          type: number
        reason:
          type: string
        source:
          type: string
          enum:
            - ui
            - sdk
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        last_updated_by:
          type: string
          readOnly: true
      readOnly: true
    JsonNode:
      type: object
    DatasetItemBatch_Write:
      required:
        - items
      type: object
      properties:
        dataset_name:
          pattern: ^(?!\s*$).+
          type: string
          description: "If null, dataset_id must be provided"
        dataset_id:
          type: string
          description: "If null, dataset_name must be provided"
          format: uuid
        items:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/DatasetItem_Write"
    DatasetItem_Write:
      required:
        - input
        - source
      type: object
      properties:
        id:
          type: string
          format: uuid
        input:
          $ref: "#/components/schemas/JsonNode_Write"
        expected_output:
          $ref: "#/components/schemas/JsonNode_Write"
        metadata:
          $ref: "#/components/schemas/JsonNode_Write"
        trace_id:
          type: string
          format: uuid
        span_id:
          type: string
          format: uuid
        source:
          type: string
          enum:
            - manual
            - trace
            - span
            - sdk
    JsonNode_Write:
      type: object
    DatasetIdentifier:
      required:
        - dataset_name
      type: object
      properties:
        dataset_name:
          type: string
    DatasetItemsDelete:
      required:
        - item_ids
      type: object
      properties:
        item_ids:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
    DatasetItemPage_Compare:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/DatasetItem_Compare"
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        total:
          type: integer
          format: int64
    DatasetItem_Compare:
      required:
        - input
        - source
      type: object
      properties:
        id:
          type: string
          format: uuid
        input:
          $ref: "#/components/schemas/JsonNode_Compare"
        expected_output:
          $ref: "#/components/schemas/JsonNode_Compare"
        metadata:
          $ref: "#/components/schemas/JsonNode_Compare"
        trace_id:
          type: string
          format: uuid
        span_id:
          type: string
          format: uuid
        source:
          type: string
          enum:
            - manual
            - trace
            - span
            - sdk
        experiment_items:
          type: array
          readOnly: true
          items:
            $ref: "#/components/schemas/ExperimentItem_Compare"
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        last_updated_by:
          type: string
          readOnly: true
    ExperimentItem_Compare:
      required:
        - dataset_item_id
        - experiment_id
        - trace_id
      type: object
      properties:
        id:
          type: string
          format: uuid
        experiment_id:
          type: string
          format: uuid
        dataset_item_id:
          type: string
          format: uuid
        trace_id:
          type: string
          format: uuid
        input:
          $ref: "#/components/schemas/JsonNode_Compare"
        output:
          $ref: "#/components/schemas/JsonNode_Compare"
        feedback_scores:
          type: array
          readOnly: true
          items:
            $ref: "#/components/schemas/FeedbackScore_Compare"
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        last_updated_by:
          type: string
          readOnly: true
      readOnly: true
    FeedbackScore_Compare:
      required:
        - name
        - source
        - value
      type: object
      properties:
        name:
          type: string
        category_name:
          type: string
        value:
          maximum: 999999999.999999999
          exclusiveMaximum: false
          minimum: -999999999.999999999
          exclusiveMinimum: false
          type: number
        reason:
          type: string
        source:
          type: string
          enum:
            - ui
            - sdk
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        last_updated_by:
          type: string
          readOnly: true
      readOnly: true
    JsonNode_Compare:
      type: object
      readOnly: true
    DatasetPage_Public:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/Dataset_Public"
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        total:
          type: integer
          format: int64
    Dataset_Public:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          pattern: ^(?!\s*$).+
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        last_updated_at:
          type: string
          format: date-time
          readOnly: true
        last_updated_by:
          type: string
          readOnly: true
        experiment_count:
          type: integer
          format: int64
          readOnly: true
        most_recent_experiment_at:
          type: string
          format: date-time
          readOnly: true
    DatasetIdentifier_Public:
      required:
        - dataset_name
      type: object
      properties:
        dataset_name:
          type: string
    DatasetItem_Public:
      required:
        - input
        - source
      type: object
      properties:
        id:
          type: string
          format: uuid
        input:
          $ref: "#/components/schemas/JsonNode_Public"
        expected_output:
          $ref: "#/components/schemas/JsonNode_Public"
        metadata:
          $ref: "#/components/schemas/JsonNode_Public"
        trace_id:
          type: string
          format: uuid
        span_id:
          type: string
          format: uuid
        source:
          type: string
          enum:
            - manual
            - trace
            - span
            - sdk
        experiment_items:
          type: array
          readOnly: true
          items:
            $ref: "#/components/schemas/ExperimentItem_Public"
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        last_updated_by:
          type: string
          readOnly: true
    ExperimentItem_Public:
      required:
        - dataset_item_id
        - experiment_id
        - trace_id
      type: object
      properties:
        id:
          type: string
          format: uuid
        experiment_id:
          type: string
          format: uuid
        dataset_item_id:
          type: string
          format: uuid
        trace_id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        last_updated_by:
          type: string
          readOnly: true
    JsonNode_Public:
      type: object
    DatasetItemPage_Public:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/DatasetItem_Public"
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        total:
          type: integer
          format: int64
    ErrorMessage:
      type: object
      properties:
        errors:
          type: array
          items:
            type: string
    ChunkedOutputJsonNode:
      type: object
      properties:
        type:
          type: object
          properties:
            typeName:
              type: string
        closed:
          type: boolean
    DatasetItemStreamRequest:
      required:
        - dataset_name
      type: object
      properties:
        dataset_name:
          type: string
        last_retrieved_id:
          type: string
          format: uuid
        steam_limit:
          type: integer
          format: int32
    DatasetUpdate:
      required:
        - name
      type: object
      properties:
        name:
          type: string
        description:
          pattern: ^(?!\s*$).+
          type: string
    Experiment:
      required:
        - dataset_name
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        dataset_name:
          type: string
        dataset_id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        metadata:
          $ref: "#/components/schemas/JsonNode"
        feedback_scores:
          type: array
          readOnly: true
          items:
            $ref: "#/components/schemas/FeedbackScoreAverage"
        trace_count:
          type: integer
          format: int64
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        last_updated_by:
          type: string
          readOnly: true
    FeedbackScoreAverage:
      required:
        - name
        - value
      type: object
      properties:
        name:
          type: string
        value:
          type: number
      readOnly: true
    Experiment_Write:
      required:
        - dataset_name
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        dataset_name:
          type: string
        name:
          type: string
        metadata:
          $ref: "#/components/schemas/JsonNode_Write"
    ExperimentItemsBatch:
      required:
        - experiment_items
      type: object
      properties:
        experiment_items:
          maxItems: 1000
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/ExperimentItem"
    ExperimentItemsDelete:
      required:
        - ids
      type: object
      properties:
        ids:
          maxItems: 1000
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
    ExperimentPage_Public:
      type: object
      properties:
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        total:
          type: integer
          format: int64
        content:
          type: array
          items:
            $ref: "#/components/schemas/Experiment_Public"
    Experiment_Public:
      required:
        - dataset_name
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        dataset_name:
          type: string
        dataset_id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        metadata:
          $ref: "#/components/schemas/JsonNode_Public"
        feedback_scores:
          type: array
          readOnly: true
          items:
            $ref: "#/components/schemas/FeedbackScoreAverage_Public"
        trace_count:
          type: integer
          format: int64
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        last_updated_by:
          type: string
          readOnly: true
    FeedbackScoreAverage_Public:
      required:
        - name
        - value
      type: object
      properties:
        name:
          type: string
        value:
          type: number
      readOnly: true
    ErrorMessage_Public:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: string
    CategoricalFeedbackDefinition:
      required:
        - details
        - name
        - type
      type: object
      allOf:
        - $ref: "#/components/schemas/Feedback"
        - type: object
          properties:
            details:
              $ref: "#/components/schemas/CategoricalFeedbackDetail"
            created_at:
              type: string
              format: date-time
              readOnly: true
            created_by:
              type: string
              readOnly: true
            last_updated_at:
              type: string
              format: date-time
              readOnly: true
            last_updated_by:
              type: string
              readOnly: true
    CategoricalFeedbackDetail:
      required:
        - categories
      type: object
      properties:
        categories:
          type: object
          additionalProperties:
            type: number
            format: double
    Feedback:
      required:
        - details
        - name
        - type
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        details:
          type: object
        createdAt:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: string
          readOnly: true
        lastUpdatedAt:
          type: string
          format: date-time
          readOnly: true
        lastUpdatedBy:
          type: string
          readOnly: true
        type:
          type: string
          enum:
            - numerical
            - categorical
      discriminator:
        propertyName: type
        mapping:
          numerical: "#/components/schemas/NumericalFeedbackDefinition"
          categorical: "#/components/schemas/CategoricalFeedbackDefinition"
    NumericalFeedbackDefinition:
      required:
        - details
        - name
        - type
      type: object
      allOf:
        - $ref: "#/components/schemas/Feedback"
        - type: object
          properties:
            details:
              $ref: "#/components/schemas/NumericalFeedbackDetail"
            created_at:
              type: string
              format: date-time
              readOnly: true
            created_by:
              type: string
              readOnly: true
            last_updated_at:
              type: string
              format: date-time
              readOnly: true
            last_updated_by:
              type: string
              readOnly: true
    NumericalFeedbackDetail:
      required:
        - max
        - min
      type: object
      properties:
        max:
          type: number
        min:
          type: number
    CategoricalFeedbackDefinition_Create:
      required:
        - details
        - name
        - type
      type: object
      allOf:
        - $ref: "#/components/schemas/Feedback_Create"
        - type: object
          properties:
            details:
              $ref: "#/components/schemas/CategoricalFeedbackDetail_Create"
    CategoricalFeedbackDetail_Create:
      required:
        - categories
      type: object
      properties:
        categories:
          type: object
          additionalProperties:
            type: number
            format: double
    Feedback_Create:
      required:
        - details
        - name
        - type
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        details:
          type: object
        type:
          type: string
          enum:
            - numerical
            - categorical
      discriminator:
        propertyName: type
        mapping:
          numerical: "#/components/schemas/NumericalFeedbackDefinition_Create"
          categorical: "#/components/schemas/CategoricalFeedbackDefinition_Create"
    NumericalFeedbackDefinition_Create:
      required:
        - details
        - name
        - type
      type: object
      allOf:
        - $ref: "#/components/schemas/Feedback_Create"
        - type: object
          properties:
            details:
              $ref: "#/components/schemas/NumericalFeedbackDetail_Create"
    NumericalFeedbackDetail_Create:
      required:
        - max
        - min
      type: object
      properties:
        max:
          type: number
        min:
          type: number
    CategoricalFeedbackDefinition_Public:
      required:
        - details
        - name
        - type
      type: object
      allOf:
        - $ref: "#/components/schemas/Feedback_Public"
        - type: object
          properties:
            details:
              $ref: "#/components/schemas/CategoricalFeedbackDetail_Public"
            created_at:
              type: string
              format: date-time
              readOnly: true
            created_by:
              type: string
              readOnly: true
            last_updated_at:
              type: string
              format: date-time
              readOnly: true
            last_updated_by:
              type: string
              readOnly: true
    CategoricalFeedbackDetail_Public:
      required:
        - categories
      type: object
      properties:
        categories:
          type: object
          additionalProperties:
            type: number
            format: double
    FeedbackDefinitionPage_Public:
      type: object
      properties:
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        total:
          type: integer
          format: int64
        content:
          type: array
          items:
            $ref: "#/components/schemas/FeedbackObject_Public"
    FeedbackObject_Public:
      required:
        - details
        - name
        - type
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        details:
          type: object
        createdAt:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: string
          readOnly: true
        lastUpdatedAt:
          type: string
          format: date-time
          readOnly: true
        lastUpdatedBy:
          type: string
          readOnly: true
        type:
          type: string
          enum:
            - numerical
            - categorical
      discriminator:
        propertyName: type
        mapping:
          numerical: "#/components/schemas/NumericalFeedbackDefinition_Public"
          categorical: "#/components/schemas/CategoricalFeedbackDefinition_Public"
    NumericalFeedbackDefinition_Public:
      required:
        - details
        - name
        - type
      type: object
      allOf:
        - $ref: "#/components/schemas/Feedback_Public"
        - type: object
          properties:
            details:
              $ref: "#/components/schemas/NumericalFeedbackDetail_Public"
            created_at:
              type: string
              format: date-time
              readOnly: true
            created_by:
              type: string
              readOnly: true
            last_updated_at:
              type: string
              format: date-time
              readOnly: true
            last_updated_by:
              type: string
              readOnly: true
    NumericalFeedbackDetail_Public:
      required:
        - max
        - min
      type: object
      properties:
        max:
          type: number
        min:
          type: number
    Feedback_Public:
      required:
        - details
        - name
        - type
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        details:
          type: object
        createdAt:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: string
          readOnly: true
        lastUpdatedAt:
          type: string
          format: date-time
          readOnly: true
        lastUpdatedBy:
          type: string
          readOnly: true
        type:
          type: string
          enum:
            - numerical
            - categorical
      discriminator:
        propertyName: type
        mapping:
          numerical: "#/components/schemas/NumericalFeedbackDefinition_Public"
          categorical: "#/components/schemas/CategoricalFeedbackDefinition_Public"
    CategoricalFeedbackDefinition_Update:
      required:
        - details
        - name
        - type
      type: object
      allOf:
        - $ref: "#/components/schemas/Feedback_Update"
        - type: object
          properties:
            details:
              $ref: "#/components/schemas/CategoricalFeedbackDetail_Update"
    CategoricalFeedbackDetail_Update:
      required:
        - categories
      type: object
      properties:
        categories:
          type: object
          additionalProperties:
            type: number
            format: double
    Feedback_Update:
      required:
        - details
        - name
        - type
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        details:
          type: object
        type:
          type: string
          enum:
            - numerical
            - categorical
      discriminator:
        propertyName: type
        mapping:
          numerical: "#/components/schemas/NumericalFeedbackDefinition_Update"
          categorical: "#/components/schemas/CategoricalFeedbackDefinition_Update"
    NumericalFeedbackDefinition_Update:
      required:
        - details
        - name
        - type
      type: object
      allOf:
        - $ref: "#/components/schemas/Feedback_Update"
        - type: object
          properties:
            details:
              $ref: "#/components/schemas/NumericalFeedbackDetail_Update"
    NumericalFeedbackDetail_Update:
      required:
        - max
        - min
      type: object
      properties:
        max:
          type: number
        min:
          type: number
    Project:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        description:
          pattern: ^(?!\s*$).+
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        last_updated_at:
          type: string
          format: date-time
          readOnly: true
        last_updated_by:
          type: string
          readOnly: true
    Project_Write:
      required:
        - name
      type: object
      properties:
        name:
          type: string
        description:
          pattern: ^(?!\s*$).+
          type: string
    ProjectPage_Public:
      type: object
      properties:
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        total:
          type: integer
          format: int64
        content:
          type: array
          items:
            $ref: "#/components/schemas/Project_Public"
    Project_Public:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        description:
          pattern: ^(?!\s*$).+
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        last_updated_at:
          type: string
          format: date-time
          readOnly: true
        last_updated_by:
          type: string
          readOnly: true
    ProjectUpdate:
      type: object
      properties:
        name:
          pattern: ^(?!\s*$).+
          type: string
        description:
          pattern: ^(?!\s*$).+
          type: string
    Span:
      required:
        - name
        - start_time
        - trace_id
        - type
      type: object
      properties:
        id:
          type: string
          format: uuid
        project_name:
          pattern: ^(?!\s*$).+
          type: string
          description: "If null, the default project is used"
        project_id:
          type: string
          format: uuid
          readOnly: true
        trace_id:
          type: string
          format: uuid
        parent_span_id:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
          enum:
            - general
            - tool
            - llm
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        input:
          $ref: "#/components/schemas/JsonNode"
        output:
          $ref: "#/components/schemas/JsonNode"
        metadata:
          $ref: "#/components/schemas/JsonNode"
        tags:
          uniqueItems: true
          type: array
          items:
            type: string
        usage:
          type: object
          additionalProperties:
            type: integer
            format: int32
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        last_updated_by:
          type: string
          readOnly: true
        feedback_scores:
          type: array
          readOnly: true
          items:
            $ref: "#/components/schemas/FeedbackScore"
    Span_Write:
      required:
        - name
        - start_time
        - trace_id
        - type
      type: object
      properties:
        id:
          type: string
          format: uuid
        project_name:
          pattern: ^(?!\s*$).+
          type: string
          description: "If null, the default project is used"
        trace_id:
          type: string
          format: uuid
        parent_span_id:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
          enum:
            - general
            - tool
            - llm
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        input:
          $ref: "#/components/schemas/JsonNode_Write"
        output:
          $ref: "#/components/schemas/JsonNode_Write"
        metadata:
          $ref: "#/components/schemas/JsonNode_Write"
        tags:
          uniqueItems: true
          type: array
          items:
            type: string
        usage:
          type: object
          additionalProperties:
            type: integer
            format: int32
    SpanBatch:
      required:
        - spans
      type: object
      properties:
        spans:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/Span"
    SpanBatch_Write:
      required:
        - spans
      type: object
      properties:
        spans:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/Span_Write"
    DeleteFeedbackScore:
      required:
        - name
      type: object
      properties:
        name:
          type: string
    FeedbackScore_Public:
      required:
        - name
        - source
        - value
      type: object
      properties:
        name:
          type: string
        category_name:
          type: string
        value:
          maximum: 999999999.999999999
          exclusiveMaximum: false
          minimum: -999999999.999999999
          exclusiveMinimum: false
          type: number
        reason:
          type: string
        source:
          type: string
          enum:
            - ui
            - sdk
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        last_updated_by:
          type: string
          readOnly: true
      readOnly: true
    Span_Public:
      required:
        - name
        - start_time
        - trace_id
        - type
      type: object
      properties:
        id:
          type: string
          format: uuid
        project_id:
          type: string
          format: uuid
          readOnly: true
        trace_id:
          type: string
          format: uuid
        parent_span_id:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
          enum:
            - general
            - tool
            - llm
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        input:
          $ref: "#/components/schemas/JsonNode_Public"
        output:
          $ref: "#/components/schemas/JsonNode_Public"
        metadata:
          $ref: "#/components/schemas/JsonNode_Public"
        tags:
          uniqueItems: true
          type: array
          items:
            type: string
        usage:
          type: object
          additionalProperties:
            type: integer
            format: int32
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        last_updated_by:
          type: string
          readOnly: true
        feedback_scores:
          type: array
          readOnly: true
          items:
            $ref: "#/components/schemas/FeedbackScore_Public"
    SpanPage_Public:
      type: object
      properties:
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        total:
          type: integer
          format: int64
        content:
          type: array
          items:
            $ref: "#/components/schemas/Span_Public"
    FeedbackScoreBatch:
      required:
        - scores
      type: object
      properties:
        scores:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/FeedbackScoreBatchItem"
    FeedbackScoreBatchItem:
      required:
        - id
        - name
        - source
        - value
      type: object
      properties:
        id:
          type: string
          format: uuid
        project_name:
          pattern: ^(?!\s*$).+
          type: string
          description: "If null, the default project is used"
        name:
          type: string
        category_name:
          type: string
        value:
          maximum: 999999999.999999999
          exclusiveMaximum: false
          minimum: -999999999.999999999
          exclusiveMinimum: false
          type: number
        reason:
          type: string
        source:
          type: string
          enum:
            - ui
            - sdk
    SpanUpdate:
      required:
        - trace_id
      type: object
      properties:
        project_name:
          pattern: ^(?!\s*$).+
          type: string
          description: "If null and project_id not specified, Default Project is assumed"
        project_id:
          type: string
          description: "If null and project_name not specified, Default Project is\
            \ assumed"
          format: uuid
        trace_id:
          type: string
          format: uuid
        parent_span_id:
          type: string
          format: uuid
        end_time:
          type: string
          format: date-time
        input:
          $ref: "#/components/schemas/JsonNode"
        output:
          $ref: "#/components/schemas/JsonNode"
        metadata:
          $ref: "#/components/schemas/JsonNode"
        tags:
          uniqueItems: true
          type: array
          items:
            type: string
        usage:
          type: object
          additionalProperties:
            type: integer
            format: int32
    Trace:
      required:
        - name
        - start_time
      type: object
      properties:
        id:
          type: string
          format: uuid
        project_name:
          pattern: ^(?!\s*$).+
          type: string
          description: "If null, the default project is used"
        project_id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        input:
          $ref: "#/components/schemas/JsonNode"
        output:
          $ref: "#/components/schemas/JsonNode"
        metadata:
          $ref: "#/components/schemas/JsonNode"
        tags:
          uniqueItems: true
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        last_updated_by:
          type: string
          readOnly: true
        feedback_scores:
          type: array
          readOnly: true
          items:
            $ref: "#/components/schemas/FeedbackScore"
    Trace_Write:
      required:
        - name
        - start_time
      type: object
      properties:
        id:
          type: string
          format: uuid
        project_name:
          pattern: ^(?!\s*$).+
          type: string
          description: "If null, the default project is used"
        name:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        input:
          $ref: "#/components/schemas/JsonNode_Write"
        output:
          $ref: "#/components/schemas/JsonNode_Write"
        metadata:
          $ref: "#/components/schemas/JsonNode_Write"
        tags:
          uniqueItems: true
          type: array
          items:
            type: string
    TraceBatch:
      required:
        - traces
      type: object
      properties:
        traces:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/Trace"
    TraceBatch_Write:
      required:
        - traces
      type: object
      properties:
        traces:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/Trace_Write"
    Trace_Public:
      required:
        - name
        - start_time
      type: object
      properties:
        id:
          type: string
          format: uuid
        project_id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        input:
          $ref: "#/components/schemas/JsonNode_Public"
        output:
          $ref: "#/components/schemas/JsonNode_Public"
        metadata:
          $ref: "#/components/schemas/JsonNode_Public"
        tags:
          uniqueItems: true
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_updated_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          type: string
          readOnly: true
        last_updated_by:
          type: string
          readOnly: true
        feedback_scores:
          type: array
          readOnly: true
          items:
            $ref: "#/components/schemas/FeedbackScore_Public"
    TracePage_Public:
      type: object
      properties:
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        total:
          type: integer
          format: int64
        content:
          type: array
          items:
            $ref: "#/components/schemas/Trace_Public"
    TraceUpdate:
      type: object
      properties:
        project_name:
          pattern: ^(?!\s*$).+
          type: string
          description: "If null and project_id not specified, Default Project is assumed"
        project_id:
          type: string
          description: "If null and project_name not specified, Default Project is\
            \ assumed"
          format: uuid
        end_time:
          type: string
          format: date-time
        input:
          $ref: "#/components/schemas/JsonNode"
        output:
          $ref: "#/components/schemas/JsonNode"
        metadata:
          $ref: "#/components/schemas/JsonNode"
        tags:
          uniqueItems: true
          type: array
          items:
            type: string
